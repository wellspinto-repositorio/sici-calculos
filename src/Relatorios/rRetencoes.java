package Relatorios;

import Funcoes.*;
import Protocolo.DepuraCampos;
import Sici.Partida.Collections;
import java.awt.AWTKeyStroke;
import java.awt.BorderLayout;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.view.JRViewer;
import retencao.Retencoes;

public class rRetencoes extends javax.swing.JInternalFrame {
    Db conn = VariaveisGlobais.conexao;

    /** Creates new form rSeguros */
    public rRetencoes() {
        initComponents();

        // Colocando enter para pular de campo
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
        FillLike();
        AutoCompletion.enable(jLIKE);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jbtnPreview = new javax.swing.JButton();
        jrbPagas = new javax.swing.JRadioButton();
        jrbAPagar = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jDtInic = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jDtFim = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel2 = new javax.swing.JLabel();
        jLIKE = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Relatório de RETENÇÕES ... ::.");
        setVisible(true);

        jbtnPreview.setText("Preview");
        jbtnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPreviewActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbPagas);
        jrbPagas.setText("Pagas");

        buttonGroup1.add(jrbAPagar);
        jrbAPagar.setText("A Pagar");

        jLabel1.setText("Data Inicial:");

        jLabel2.setText("Data Final:");

        jLIKE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDtInic, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbPagas)
                                .addGap(18, 18, 18)
                                .addComponent(jrbAPagar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLIKE, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbPagas)
                    .addComponent(jrbAPagar)
                    .addComponent(jLIKE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jDtInic, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtnPreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDtFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FillLike() {
        String sql = "SELECT DISTINCT RCampos(Upper(mid(r.campo,1,2))) AS descricao FROM retencao r where r.marca <> 'X';";
        jLIKE.removeAllItems();
        jLIKE.addItem("%");
        if (!sql.isEmpty()) {
            ResultSet imResult = this.conn.OpenTable(sql, null);

            try {
                while (imResult.next()) {
                    jLIKE.addItem(String.valueOf(imResult.getString("descricao")));
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            conn.CloseTable(imResult);
        }
        
    }
    private void jbtnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPreviewActionPerformed
        Boolean tipo = jrbPagas.isSelected();
        String dlik = jLIKE.getSelectedItem().toString().trim();

        //ListaRetencao(tipo, jDtInic.getDate(), jDtFim.getDate(), dlik);        
        RelRetencao(Dates.DateFormata("yyyy-MM-dd", jDtInic.getDate()), Dates.DateFormata("yyyy-MM-dd", jDtFim.getDate()),(tipo ? "P" : "N"), dlik);        
    }//GEN-LAST:event_jbtnPreviewActionPerformed

    private void RelRetencao(String dtInic, String dtFinal, String tipo, String mLIKE) {
        Collections gVar = VariaveisGlobais.dCliente;
        
        Map parametros = new HashMap();
        parametros.put("datainic", dtInic);
        parametros.put("datafim", dtFinal);
        parametros.put("mylike", mLIKE);
        
        try {
            String fileName = "reports/" + (tipo.equalsIgnoreCase("P") ? "rRetenPagos.jasper" : "rRetenNPagos.jasper");
            JasperPrint print = JasperFillManager.fillReport(fileName, parametros, conn.conn);

            // Create a PDF exporter
            JRExporter exporter = new JRPdfExporter();

            new jDirectory("reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/");
            String pathName = "reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/";

            // Configure the exporter (set output file name and print object)
            String outFileName = pathName + "Retencao_" + Dates.DateFormata("ddMMyyyy", new Date()) + ".pdf";
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, outFileName);
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);

            // Export the PDF file
            exporter.exportReport();
            
            new toPreview(outFileName);
//            if (!"jasper".equals(VariaveisGlobais.reader)) {
//                ComandoExterno ce = new ComandoExterno();
//                ComandoExterno.ComandoExterno(VariaveisGlobais.reader + " " + outFileName);
//            } else {
//                JasperViewer viewer = new JasperViewer(print, false);
//                viewer.show();
//            }
                
        } catch (JRException e) {
            e.printStackTrace();
            System.exit(1);
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }        
    }
    
    private void ListaRetencao(Boolean bPagas, Date dInic, Date dFinal, String dLike) {
        List<Retencoes> lista = new ArrayList<Retencoes>();
        
        String sql = "SELECT r.contrato, r.rgprp, r.rgimv, r.campo, r.vencimento, r.marca, CONCAT(i.end,',',i.num,' ',i.compl) as endereco, r.rc_aut, r.rt_aut FROM retencao r, imoveis i WHERE (r.rgimv = i.rgimv) AND " + (bPagas ? "r.marca = 'X'" : "r.marca <> 'X'") + 
                     " AND (vencimento >= '" + Dates.DateFormata("yyyy-MM-dd", dInic) + "' AND vencimento <= '" + Dates.DateFormata("yyyy-MM-dd", dFinal) + "') ORDER BY r.rgimv, r.campo, r.vencimento;";
        sql = FuncoesGlobais.Subst(sql, new String[] {VariaveisGlobais.usuario.toLowerCase().trim()});

        ResultSet rs = conn.OpenTable(sql, null);
        try {
            while (rs.next()) {
                String dcontrato = rs.getString("contrato");
                String drgprp = rs.getString("rgprp");
                String drgimv = rs.getString("rgimv");

                DepuraCampos a = new DepuraCampos(rs.getString("campo"));
                VariaveisGlobais.ccampos = rs.getString("campo");

                a.SplitCampos();
                // Ordena Matriz
                Arrays.sort(a.aCampos, new Comparator()
                {
                private int pos1 = 3;
                private int pos2 = 4;
                public int compare(Object o1, Object o2) {
                    String p1 = ((String)o1).substring(pos1, pos2);
                    String p2 = ((String)o2).substring(pos1, pos2);
                    return p1.compareTo(p2);
                }
                });

                String[] Campo = a.Depurar(0);
                String dtaxa = Campo[0];
                float dValor = LerValor.StringToFloat(Campo[1]);

                String dDtLanc = Dates.DateFormata("dd/MM/yyyy", rs.getDate("vencimento"));
                String dTag = rs.getString("marca");
                String dcampo = rs.getString("campo");

                String dend = rs.getString("endereco");
                String drcaut = rs.getString("rc_aut");
                String drtaut = rs.getString("rt_aut");
                
                Object[][] adados = conn.ReadFieldsTable(new String[] {"dtrecebimento"}, "extrato", "rc_aut = '" + drcaut + "'");
                String drecebimento = null; Date drecbto = null;
                if (adados != null) {
                    drecebimento = Dates.DateFormata("dd/MM/yyyy", Dates.StringtoDate(adados[0][3].toString(), "yyyy/MM/dd"));
                    drecbto = Dates.StringtoDate(drecebimento,"dd/MM/yyyy");
                }
                
                Retencoes bean1 = new Retencoes();
                bean1.setmarca(dTag);
                bean1.setrgprp(drgprp);
                bean1.setrgimv(drgimv);
                bean1.setcontrato(dcontrato);
                bean1.setendi(dend);
                bean1.setdescricao(dtaxa);
                bean1.setvalor(dValor);
                bean1.setvencimento(Dates.StringtoDate(dDtLanc,"dd/MM/yyyy"));
                
                bean1.setrecebimento(drecbto);
                bean1.setrcaut(drcaut);
                bean1.setrtaut(drtaut);
                
                if (dtaxa.equalsIgnoreCase(dLike) || dLike.equalsIgnoreCase("%")) {
                    if (drecbto != null) {
                        if (drecbto.after(dInic) && drecbto.before(dFinal)) lista.add(bean1);
                    } else {
                        lista.add(bean1);
                    }
                }
            }
        } catch (SQLException ex) {ex.printStackTrace();}

        conn.CloseTable(rs);
        
        //executa o relatório
        Map parametros = new HashMap();
        parametros.put("datainic", Dates.DateFormata("dd-MM-yyyy", dInic));
        parametros.put("datafim", Dates.DateFormata("dd-MM-yyyy", dFinal));
        parametros.put("titulo",(bPagas ? "RELATORIO DE RETENÇÕES PAGAS" : "RELATORIO DE RETENÇÕES A PAGAR"));
        
        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {
            String fileName = "reports/rRetenNPagos2.jasper";
            JasperPrint print = JasperFillManager.fillReport(fileName, parametros, jrds);

            // Create a PDF exporter
            JRExporter exporter = new JRPdfExporter();

            new jDirectory("reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/");
            String pathName = "reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/";
            
            // Configure the exporter (set output file name and print object)
            String outFileName = pathName + "Retnpagas.pdf";
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, outFileName);
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);

            // Export the PDF file
            exporter.exportReport();

            viewReportFrame("Retenções", print);
            
        } catch (JRException e) {
            e.printStackTrace();
            System.exit(1);
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
        
    }
    
private static void viewReportFrame( String titulo, JasperPrint print ) {

        /*
         * Cria um JRViewer para exibir o relatório.
         * Um JRViewer é uma JPanel.
         */
        JRViewer viewer = new JRViewer( print );

        // cria o JFrame
        JFrame frameRelatorio = new JFrame( titulo );

        // adiciona o JRViewer no JFrame
        frameRelatorio.add( viewer, BorderLayout.CENTER );

        // configura o tamanho padrão do JFrame
        frameRelatorio.setSize( 500, 500 );

        // maximiza o JFrame para ocupar a tela toda.
        frameRelatorio.setExtendedState( JFrame.MAXIMIZED_BOTH );

        // configura a operação padrão quando o JFrame for fechado.
        frameRelatorio.setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );

        // exibe o JFrame
        frameRelatorio.setVisible( true );

    }    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser jDtFim;
    private com.toedter.calendar.JDateChooser jDtInic;
    private javax.swing.JComboBox jLIKE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnPreview;
    private javax.swing.JRadioButton jrbAPagar;
    private javax.swing.JRadioButton jrbPagas;
    // End of variables declaration//GEN-END:variables
}
