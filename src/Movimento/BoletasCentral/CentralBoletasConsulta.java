package Movimento.BoletasCentral;

import Funcoes.Dates;
import Funcoes.Db;
import Funcoes.FuncoesGlobais;
import Funcoes.LerValor;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import Funcoes.jTableControl;
import Protocolo.ReCalculos;
import java.awt.Cursor;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Date;

/**
 *
 * @author Wellington
 */
public class CentralBoletasConsulta extends javax.swing.JPanel {
    Db conn = VariaveisGlobais.conexao;   
    jTableControl tabela = new jTableControl(true);    

    /**
     * Creates new form CentralBoletasConsulta
     */
    public CentralBoletasConsulta() {
        initComponents();
        
        FillBancos();
        conDataInicial.setDate(Dates.primeiraDataMes(new Date()));
        conDataFinal.setDate(Dates.ultimoDataMes(new Date()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jcbConsultaBancos = new javax.swing.JComboBox<>();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jLabel10 = new javax.swing.JLabel();
        jTipoListagem = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        conDataInicial = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel12 = new javax.swing.JLabel();
        conDataFinal = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        conBtnListar = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        conLista = new javax.swing.JTable();
        jProgressListaBoletasConsulta = new javax.swing.JProgressBar();
        jProgressListaBoletasConsulta1 = new javax.swing.JProgressBar();
        jPanel17 = new javax.swing.JPanel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel18 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        baiQuantidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        baiValor = new javax.swing.JTextField();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel19 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        recQuantidade = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        recValor = new javax.swing.JTextField();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel21 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        preQuantidade = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        preValor = new javax.swing.JTextField();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setMaximumSize(new java.awt.Dimension(841, 513));
        setMinimumSize(new java.awt.Dimension(841, 513));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(841, 513));

        jPanel12.setMaximumSize(new java.awt.Dimension(798, 502));
        jPanel12.setMinimumSize(new java.awt.Dimension(798, 502));
        jPanel12.setPreferredSize(new java.awt.Dimension(798, 502));

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.setMaximumSize(new java.awt.Dimension(823, 44));
        jPanel13.setMinimumSize(new java.awt.Dimension(823, 44));
        jPanel13.setPreferredSize(new java.awt.Dimension(823, 44));

        jLabel13.setText("Banco:");

        jcbConsultaBancos.setMaximumSize(new java.awt.Dimension(106, 24));
        jcbConsultaBancos.setMinimumSize(new java.awt.Dimension(106, 24));
        jcbConsultaBancos.setPreferredSize(new java.awt.Dimension(106, 24));

        jLabel10.setText("Listar:");

        jTipoListagem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "PAGOS", "VENCIDOS", "EMABERTO" }));
        jTipoListagem.setMaximumSize(new java.awt.Dimension(106, 24));
        jTipoListagem.setMinimumSize(new java.awt.Dimension(106, 24));
        jTipoListagem.setPreferredSize(new java.awt.Dimension(106, 24));

        jLabel11.setText("Periodo:");

        conDataInicial.setDate(new java.util.Date(-2208977612000L));
        conDataInicial.setMaximumSize(new java.awt.Dimension(106, 24));
        conDataInicial.setMinimumSize(new java.awt.Dimension(106, 24));

        jLabel12.setText("at√©");

        conDataFinal.setDate(new java.util.Date(-2208977612000L));
        conDataFinal.setMaximumSize(new java.awt.Dimension(106, 24));
        conDataFinal.setMinimumSize(new java.awt.Dimension(106, 24));

        conBtnListar.setText("Listar");
        conBtnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conBtnListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbConsultaBancos, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTipoListagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conBtnListar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(607, 607, 607)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel10)
                            .addComponent(jTipoListagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(conDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(conDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(conBtnListar)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(filler7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jcbConsultaBancos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setMaximumSize(new java.awt.Dimension(823, 355));
        jPanel16.setMinimumSize(new java.awt.Dimension(823, 355));
        jPanel16.setPreferredSize(new java.awt.Dimension(823, 355));

        jLabel14.setBackground(new java.awt.Color(153, 204, 255));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/Asp.net_0031_color1_16x16.gif"))); // NOI18N
        jLabel14.setText("Boletos no sistema.");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel14.setIconTextGap(8);
        jLabel14.setOpaque(true);

        conLista.setAutoCreateRowSorter(true);
        conLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Emiss√£o", "Vencimento", "Pagamento", "SeuNumero", "NossoNumero", "CnpjCpf", "Sacado", "lMulta", "Juros", "Valor", "Situa√ß√£o", "B"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        conLista.setColumnSelectionAllowed(true);
        conLista.setMaximumSize(new java.awt.Dimension(807, 301));
        conLista.setMinimumSize(new java.awt.Dimension(807, 301));
        conLista.setPreferredSize(new java.awt.Dimension(807, 301));
        conLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(conLista);

        jProgressListaBoletasConsulta.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jProgressListaBoletasConsulta.setMaximumSize(new java.awt.Dimension(146, 14));
        jProgressListaBoletasConsulta.setMinimumSize(new java.awt.Dimension(146, 14));
        jProgressListaBoletasConsulta.setStringPainted(true);

        jProgressListaBoletasConsulta1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jProgressListaBoletasConsulta1.setStringPainted(true);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressListaBoletasConsulta1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressListaBoletasConsulta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressListaBoletasConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jProgressListaBoletasConsulta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel17.setMaximumSize(new java.awt.Dimension(823, 82));
        jPanel17.setMinimumSize(new java.awt.Dimension(823, 82));
        jPanel17.setPreferredSize(new java.awt.Dimension(823, 82));
        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.LINE_AXIS));
        jPanel17.add(filler3);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 1, true), " [ Vencidos ] ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 102))); // NOI18N
        jPanel18.setMaximumSize(new java.awt.Dimension(198, 89));
        jPanel18.setMinimumSize(new java.awt.Dimension(198, 89));
        jPanel18.setPreferredSize(new java.awt.Dimension(148, 81));

        jLabel16.setText("Quantidade:");

        baiQuantidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        baiQuantidade.setForeground(new java.awt.Color(0, 51, 204));
        baiQuantidade.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        baiQuantidade.setText("000");

        jLabel17.setText("Valor:");

        baiValor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        baiValor.setForeground(new java.awt.Color(0, 51, 204));
        baiValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        baiValor.setText("0,00");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(baiValor))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(baiQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(baiQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(baiValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel17.add(jPanel18);
        jPanel17.add(filler4);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 204, 0), 1, true), " [ Pagos ] ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 204, 0))); // NOI18N
        jPanel19.setMaximumSize(new java.awt.Dimension(148, 89));
        jPanel19.setMinimumSize(new java.awt.Dimension(148, 89));
        jPanel19.setPreferredSize(new java.awt.Dimension(150, 81));

        jLabel18.setText("Quantidade:");

        recQuantidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        recQuantidade.setForeground(new java.awt.Color(51, 153, 0));
        recQuantidade.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recQuantidade.setText("000");

        jLabel19.setText("Valor:");

        recValor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        recValor.setForeground(new java.awt.Color(51, 153, 0));
        recValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        recValor.setText("0,00");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 57, Short.MAX_VALUE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recValor)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(recQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(recValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel17.add(jPanel19);
        jPanel17.add(filler6);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true), " [ Em Abertos ] ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 204, 204))); // NOI18N
        jPanel21.setMaximumSize(new java.awt.Dimension(198, 89));
        jPanel21.setMinimumSize(new java.awt.Dimension(198, 89));
        jPanel21.setPreferredSize(new java.awt.Dimension(148, 81));

        jLabel22.setText("Quantidade:");

        preQuantidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        preQuantidade.setForeground(new java.awt.Color(0, 204, 204));
        preQuantidade.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        preQuantidade.setText("000");

        jLabel23.setText("Valor:");

        preValor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        preValor.setForeground(new java.awt.Color(0, 204, 204));
        preValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValor.setText("0,00");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preValor))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(preQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(preValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel17.add(jPanel21);
        jPanel17.add(filler2);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void conBtnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conBtnListarActionPerformed
        try {
            ListaBoletasBanco();
        } catch (Exception ex) {
            System.out.println("Problema de comunica√ß√£o com o banco ou sem Internet.");
        }
    }//GEN-LAST:event_conBtnListarActionPerformed

   private void FillBancos() {
        String sql = "SELECT codigo nbanco, nome FROM bancos bc WHERE EXISTS(SELECT bcobol FROM locatarios WHERE codigo = bcobol AND NULLIF(bcobol, ' ') IS NOT NULL AND NOT EXISTS(SELECT nbanco FROM bancos_digital WHERE codigo = nbanco) GROUP BY bcobol);";
        ResultSet rs = conn.OpenTable(sql, null);
        try {
            jcbConsultaBancos.removeAllItems();
            while (rs.next()) {
                jcbConsultaBancos.addItem(rs.getString("nbanco") + " - " + rs.getString("nome"));
            }
        } catch (Exception e) {e.printStackTrace();}
        conn.CloseTable(rs);
    }
        
    private void ListaBoletasBanco() throws Exception {
        conBtnListar.setEnabled(false);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
               
        TableControl.header(conLista, new String[][] {
            {"Emiss√£o","Vencimento","Pagamento","SeuNumero","NossoNumero","CnpjCpf","Sacado","Multa","Juros","Valor","Situa√ß√£o"},
            {"0","80","80","70","100","0","240","70","70","80","80"}
        });
        TableControl.Clear(conLista);
        
        Object[][] data = {};
        
        int a = 1; int b = 1;
        jProgressListaBoletasConsulta.setValue(0);
        
        String tipoListagem = jTipoListagem.getSelectedItem().toString();
        String selectSQL = ""; Object[][] param = null;
        if (tipoListagem.equalsIgnoreCase("TODOS")) {
            selectSQL = "SELECT r.rgprp, r.rgimv, r.contrato, " + 
                    "IF(r.dtvencbol IS NULL, r.dtvencimento, r.dtvencbol) AS dtvencimento, " + 
                    "e.dtrecebimento, l.nomerazao, l.cpfcnpj, r.nnumero, r.tag " + 
                    "FROM recibo r INNER JOIN locatarios l ON r.contrato = l.contrato " + 
                    "LEFT JOIN extrato e ON e.rgprp = r.rgprp AND e.rgimv = r.rgimv AND " + 
                    "e.contrato = r.contrato AND e.DTVENCIMENTO = r.dtvencimento " + 
                    "WHERE r.remessa = 'S' AND r.nnumero IS NOT NULL AND " + 
                    "l.bcobol = :banco AND " +
                    "((r.dtvencbol IS NULL AND r.DTVENCIMENTO BETWEEN :dtini1 AND :dtfim1) OR " + 
                    "(r.dtvencbol BETWEEN :dtini2 AND :dtfim2)) ORDER BY 4;";
            param = new Object[][] {
                {"date", "dtini1", conDataInicial.getDate()},
                {"date", "dtfim1", conDataFinal.getDate()},
                {"date", "dtini2", conDataInicial.getDate()},
                {"date", "dtfim2", conDataFinal.getDate()},
                {"string", "banco", jcbConsultaBancos.getSelectedItem().toString().substring(0,3)}
            };
        } else if (tipoListagem.equalsIgnoreCase("PAGOS")) {
            selectSQL = "SELECT r.rgprp, r.rgimv, r.contrato, " + 
                    "IF(ISNULL(r.dtvencbol), r.dtvencimento, r.dtvencbol) AS dtvencimento, " + 
                    "(SELECT e.dtrecebimento FROM extrato e WHERE e.rgprp = r.rgprp AND " + 
                    "e.rgimv = r.rgimv AND e.contrato = r.contrato AND e.DTVENCIMENTO = r.dtvencimento LIMIT 1) AS dtrecebimento, " + 
                    "l.nomerazao, l.cpfcnpj, r.nnumero, r.tag FROM recibo r " + 
                    "JOIN locatarios l ON r.contrato = l.contrato WHERE r.remessa = 'S' " + 
                    "AND NOT ISNULL(r.nnumero) AND l.bcobol = :banco AND r.tag = 'X' AND " + 
                    "((NOT ISNULL(r.dtvencbol) AND r.dtvencbol BETWEEN :dtini1 AND :dtfim1) OR " + 
                    "(ISNULL(r.dtvencbol) AND r.dtvencimento BETWEEN :dtini2 AND :dtfim2) ) " + 
                    "ORDER BY dtvencimento;";
            param = new Object[][] {
                {"date", "dtini1", conDataInicial.getDate()},
                {"date", "dtfim1", conDataFinal.getDate()},
                {"date", "dtini2", conDataInicial.getDate()},
                {"date", "dtfim2", conDataFinal.getDate()},
                {"string", "banco", jcbConsultaBancos.getSelectedItem().toString().substring(0,3)}
            };
        } else if (tipoListagem.equalsIgnoreCase("VENCIDOS")) {
            selectSQL = "SELECT r.rgprp, r.rgimv, r.contrato, " + 
                    "COALESCE(r.dtvencbol, r.dtvencimento) AS dtvencimento, " + 
                    "e.dtrecebimento AS dtrecebimento, l.nomerazao, l.cpfcnpj, " + 
                    "r.nnumero, r.tag FROM recibo r " + 
                    "JOIN locatarios l ON r.contrato = l.contrato " + 
                    "LEFT JOIN extrato e ON e.rgprp = r.rgprp AND " + 
                    "e.rgimv = r.rgimv AND e.contrato = r.contrato AND " + 
                    "e.DTVENCIMENTO = COALESCE(r.dtvencbol, r.dtvencimento) " + 
                    "WHERE r.remessa = 'S' AND NOT ISNULL(r.nnumero) AND " + 
                    "l.bcobol = :banco AND r.tag != 'X' AND " + 
                    "(COALESCE(r.dtvencbol, r.dtvencimento) BETWEEN :dtini1 AND :dtfim1) AND " + 
                    "COALESCE(r.dtvencbol, r.dtvencimento) <= NOW() ORDER BY 4;";
            param = new Object[][] {
                {"date", "dtini1", conDataInicial.getDate()},
                {"date", "dtfim1", conDataFinal.getDate()},
                {"string", "banco", jcbConsultaBancos.getSelectedItem().toString().substring(0,3)}
            };
        } else if (tipoListagem.equalsIgnoreCase("EMABERTO")) {
            selectSQL = "SELECT r.rgprp, r.rgimv, r.contrato, " + 
                    "IF(ISNULL(r.dtvencbol), r.dtvencimento, r.dtvencbol) AS dtvencimento, " + 
                    "(SELECT e.dtrecebimento FROM extrato e WHERE e.rgprp = r.rgprp AND " + 
                    "e.rgimv = r.rgimv AND e.contrato = r.contrato AND " + 
                    "e.DTVENCIMENTO = r.dtvencimento LIMIT 1) AS dtrecebimento, " + 
                    "l.nomerazao, l.cpfcnpj, r.nnumero, r.tag FROM recibo r " + 
                    "JOIN locatarios l ON r.contrato = l.contrato LEFT JOIN extrato e " + 
                    "ON e.rgprp = r.rgprp AND e.rgimv = r.rgimv AND e.contrato = r.contrato AND " + 
                    "e.DTVENCIMENTO = r.dtvencimento WHERE r.remessa = 'S' AND " + 
                    "NOT ISNULL(r.nnumero) AND l.bcobol = :banco AND r.tag != 'X' AND " + 
                    "IF(ISNULL(r.dtvencbol), r.dtvencimento, r.dtvencbol) " + 
                    "BETWEEN :dtini1 AND :dtfim1 AND NOW() <= IF(ISNULL(r.dtvencbol), " + 
                    "r.dtvencimento, r.dtvencbol) ORDER BY dtvencimento;";
            param = new Object[][] {
                {"date", "dtini1", conDataInicial.getDate()},
                {"date", "dtfim1", conDataFinal.getDate()},
                {"string", "banco", jcbConsultaBancos.getSelectedItem().toString().substring(0,3)}
            };
        }
        
        String conDataIni = Dates.DateFormata("yyyy-MM-dd", conDataInicial.getDate());
        String conDataFim = Dates.DateFormata("yyyy-MM-dd", conDataFinal.getDate());
                
        ResultSet rs = conn.OpenTable(selectSQL, param);
        
        String trgprp = null, trgimv = null, tcontrato = null;
        Date tvencimento = null; Date trecebimento = null;
        String tnomerazao = null; String tcpfcnpj = null;
        int tautenticacaco = -1; String tnnumero = null; 
        String ttag = null; String tcampo = null;
        String tmulta = "0,00", tjuros = "0,00", tvalor = "0,00";
        String tmu = "0,00", tju = "0,00", tvr = "0,00";
        
        // Totalizadores
        int baiQtd = 0; BigDecimal baiVlr = new BigDecimal("0");
        int recQtd = 0; BigDecimal recVlr = new BigDecimal("0");
        int preQtd = 0; BigDecimal preVlr = new BigDecimal("0");
        int brc = conn.RecordCount(rs);
        try {
            while (rs.next()) {
                try { trgprp = rs.getString("rgprp"); } catch (SQLException exSQL) { trgprp = ""; }
                try { trgimv = rs.getString("rgimv"); } catch (SQLException exSQL) { trgimv = ""; }
                try { tcontrato = rs.getString("contrato"); } catch (SQLException exSQL) { tcontrato = ""; }
                try { tvencimento = rs.getDate("dtvencimento"); } catch (SQLException exSQL) { tvencimento = null; }
                try { trecebimento = rs.getDate("dtrecebimento"); } catch (SQLException exSQL) { trecebimento = null; }
                try { tnomerazao = rs.getString("nomerazao"); } catch (SQLException exSQL) { tnomerazao = ""; }
                try { tcpfcnpj = rs.getString("cpfcnpj"); } catch (SQLException exSQL) { tcpfcnpj = ""; }
                try { tnnumero = rs.getString("nnumero"); } catch (SQLException exSQL) { tnnumero = ""; }
                try { ttag = rs.getString("tag"); } catch (SQLException exSQL) { ttag = ""; }
                                                              
                // Pega valor da boleta, multa, juros e corre√ß√£o do arquivo de retorno
                float[] tboleta = CalcularRecibo(
                        trgprp, 
                        trgimv, 
                        tcontrato, 
                        Dates.DateFormata("dd-MM-yyyy",tvencimento), 
                        (trecebimento != null ? Dates.DateFormata("dd-MM-yyyy", trecebimento) : null)
                );
                tmulta = new DecimalFormat("#,##0.00").format(tboleta[1]);
                tjuros = new DecimalFormat("#,##0.00").format(tboleta[2] + tboleta[3]);
                tvalor = new DecimalFormat("#,##0.00").format(tboleta[4]);                

                String situacaoBoleta = "";
                if (ttag.equalsIgnoreCase("X")) {
                    situacaoBoleta = "PAGOS";
                } else if (!ttag.equalsIgnoreCase("X") && Dates.DateDiff(Dates.DIA, tvencimento, new Date()) > 0) {
                    situacaoBoleta = "VENCIDOS";
                } else if (!ttag.equalsIgnoreCase("X") && Dates.DateDiff(Dates.DIA, new Date(), tvencimento) <= 0) {
                    situacaoBoleta = "EMABERTO";
                }
                
                TableControl.add(conLista, new String[][]{
                    {
                        "", 
                        (tvencimento != null ?  Dates.DateFormata("dd-MM-yyyy",tvencimento) : ""), 
                        (trecebimento != null ? Dates.DateFormata("dd-MM-yyyy", trecebimento) : ""), 
                        tcontrato, 
                        (tnnumero.substring(0,3).equalsIgnoreCase("000") ? tnnumero : tnnumero.substring(3)), 
                        tcpfcnpj, 
                        tnomerazao,
                        tmulta,
                        tjuros,
                        tvalor,
                        situacaoBoleta
                    },
                    {"C","C","C","C","C","C","L","R","R","R","C"}
                }, true);
                
                
                // Totalizadores
                if (ttag.equalsIgnoreCase("X")) {
                    // PAGOS
                    recQtd++;
                    recVlr = recVlr.add(new BigDecimal(tvalor.replace(".", "").replace(",", ".")));
                } else if (!ttag.equalsIgnoreCase("X") && (Dates.DateDiff(Dates.DIA, tvencimento, new Date()) <= 0) ) {
                    // EM ABERTO
                    preQtd++;
                    preVlr = preVlr.add(new BigDecimal(tvalor.replace(".", "").replace(",", ".")));
                } else if (!ttag.equalsIgnoreCase("X") && (Dates.DateDiff(Dates.DIA, tvencimento, new Date()) > 0) ) {
                    // VENCIDO
                    baiQtd++;
                    baiVlr = baiVlr.add(new BigDecimal(tvalor.replace(".", "").replace(",", ".")));
                }
                
                int pgs2 = ((b++ * 100) / brc) + 1;
                jProgressListaBoletasConsulta.setValue(pgs2);     
                try { Thread.sleep(20); } catch (InterruptedException ex) { }

            }
        } catch (SQLException sqlEx) {}
        conn.CloseTable(rs);
        
        baiQuantidade.setText(FuncoesGlobais.StrZero(String.valueOf(baiQtd),3));
        baiValor.setText(LerValor.floatToCurrency(baiVlr.floatValue(),2));

        recQuantidade.setText(FuncoesGlobais.StrZero(String.valueOf(recQtd),3));
        recValor.setText(LerValor.floatToCurrency(recVlr.floatValue(),2));

        preQuantidade.setText(FuncoesGlobais.StrZero(String.valueOf(preQtd),3));
        preValor.setText(LerValor.floatToCurrency(preVlr.floatValue(),2));

        // Retorna cursor
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        conBtnListar.setEnabled(true);
    }

    private float[] CalcularRecibo(String rgprp, String rgimv, String contrato, String vecto, String pagto) {
        if ("".equals(vecto.trim())) { return null; }

        ReCalculos rc = new ReCalculos();
        if (pagto != null) rc.setCalcDate(Dates.StringtoDate(pagto, "dd-MM-yyyy"));
        try {
            rc.Inicializa(rgprp, rgimv, contrato);
        } catch (SQLException ex) {}

        String campo = ""; String rcampo = ""; boolean mCartVazio = false;
        String sql = "SELECT * FROM recibo WHERE contrato = '" + contrato + 
                "' AND (dtvencimento = '" + Dates.DateFormata("yyyy-MM-dd", Dates.StringtoDate(vecto, "dd/MM/yyyy")) + "' OR " + 
                "dtvencbol = '" + Dates.DateFormata("yyyy-MM-dd", Dates.StringtoDate(vecto, "dd/MM/yyyy")) + "');";
        ResultSet pResult = conn.OpenTable(sql, null);
        try {
            if (pResult.first()) {
                campo = pResult.getString("campo");

                // Aqui recebe o IPTU
                campo = IPTU(vecto, campo, rgimv);
                
                rcampo = campo;
                mCartVazio = ("".equals(rcampo.trim()));
            }
        } catch (SQLException ex) {
            rcampo = "";
        }
        conn.CloseTable(pResult);

        float exp = 0, multa = 0, juros = 0, correcao = 0;

        try {
            exp = rc.TaxaExp(campo);
        } catch (SQLException ex) {}

        try {
            multa = rc.Multa(campo, vecto, false);
        } catch (SQLException ex) {}

        try {
            juros = rc.Juros(campo, vecto);
        } catch (SQLException ex) {}

        try {
            correcao = rc.Correcao(campo, vecto);
        } catch (SQLException ex) {}

        float tRecibo = 0;
        tRecibo = ReCalculos.RetValorCampos(campo);
        tRecibo += exp + multa + juros + correcao;

        float[] retorno = new float[5];
        retorno[0] = exp; retorno[1] = multa; retorno[2] = juros; retorno[3] = correcao; retorno[4] = tRecibo;
        return retorno;
    }
    
    private String IPTU(String vecto, String campo, String rgimv) {
        String pIptu = ""; Integer pant = 0;
        try { pIptu = conn.ReadParameters("IPTU"); } catch (Exception e) {}
        try { pant = Integer.valueOf(conn.ReadParameters("IPTUANT"));  } catch (Exception e) {}
        if (pIptu == null || pIptu.equalsIgnoreCase("")) return campo;
        
        Boolean eiptu = campo.contains(pIptu + ":");
        if (eiptu) return campo;
        
        String[] meses = {"","jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"};
        String ddia = Dates.StringtoString(vecto, "dd-MM-yyyy", "dd-MM-yyyy").substring(0, 2);
        String dmes = Dates.StringtoString(vecto, "dd-MM-yyyy", "dd-MM-yyyy").substring(3, 5);
        String dano  = Dates.StringtoString(vecto, "dd-MM-yyyy", "dd-MM-yyyy").substring(6, 10);
        String umes = Dates.DateFormata("dd-MM-yyyy", new Date()).substring(3, 5);
        String uano = Dates.DateFormata("dd-MM-yyyy", new Date()).substring(6, 10);
        
        String wmes = ""; String wValor = "0000000000";
        
        String wSql = "SELECT p.* FROM iptu p, imoveis i WHERE InStr(i.matriculas,p.matricula) > 0 AND p.ano = '" + dano + "' AND i.rgimv = '" + rgimv + "';";
        ResultSet ws = conn.OpenTable(wSql, null);
        try {
            while (ws.next()) {
                wmes = ws.getString(meses[Integer.valueOf(dmes)]);
                String[] avar = wmes.split(";");
                if (avar.length > 0) {
                    for (int i=0;i<avar.length;i++) {
                        String[] rvar = avar[i].split(",");
                        if (!rvar[0].trim().equalsIgnoreCase("")) {
                            if (Dates.DateDiff(Dates.DIA, new Date(), Dates.DateAdd(Dates.DIA, (pant * -1), Dates.StringtoDate(rvar[0], "dd-MM-yyyy"))) > 0) {
                                wValor = rvar[1];
                                break;
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {}
        return campo + ";" + (!wValor.equalsIgnoreCase("0000000000") ? pIptu + ":2:" + wValor + ":0000:NT:RZ:ET:IP" : "");
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField baiQuantidade;
    private javax.swing.JTextField baiValor;
    private javax.swing.JButton conBtnListar;
    private com.toedter.calendar.JDateChooser conDataFinal;
    private com.toedter.calendar.JDateChooser conDataInicial;
    private javax.swing.JTable conLista;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JProgressBar jProgressListaBoletasConsulta;
    private javax.swing.JProgressBar jProgressListaBoletasConsulta1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JComboBox<String> jTipoListagem;
    private javax.swing.JComboBox<String> jcbConsultaBancos;
    private javax.swing.JTextField preQuantidade;
    private javax.swing.JTextField preValor;
    private javax.swing.JTextField recQuantidade;
    private javax.swing.JTextField recValor;
    // End of variables declaration//GEN-END:variables
}
