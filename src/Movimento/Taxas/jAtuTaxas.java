package Movimento.Taxas;

import Funcoes.*;
import java.awt.BorderLayout;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.view.JRViewer;

public class jAtuTaxas extends javax.swing.JInternalFrame {
    Db conn = VariaveisGlobais.conexao;
    boolean bExecNome = false, bExecCodigo = false;
    String campos = ""; String codigo_carteira = "";
    String contrato = ""; String rcampo = "";
    
    TableRowSorter<TableModel> sorter;
    
    /** Creates new form jAtuTaxas */
    public jAtuTaxas() {
        initComponents();

        conn.ExisteTabelaataxas();
        conn.ExisteTabelaAntecip();
        
        TableControl.header(lista, new String[][] {{"id", "T","Matricula",
                                      "Vencimento", "Valor"},{"0","30","200","100","80"}});

        LimpaCampos();        
        ListarContas();
    }

    private void ListarContas() {
        TableControl.Clear(lista);
        ResultSet rs = conn.OpenTable("SELECT * FROM ataxas ORDER BY idataxas;", null);
        try {
            while (rs.next()) {
                String[][] aitens = new String[][] {{rs.getString("idataxas"),rs.getString("tipo"), rs.getString("matricula"), rs.getString("vencimento"), rs.getString("valor")},{"C","L","L","R"}};
                TableControl.add(lista, aitens, true);
            }
        } catch (Exception e) {}
        conn.CloseTable(rs);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtxLeitor = new javax.swing.JTextField();
        jbtClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCodLeitura = new javax.swing.JFormattedTextField();
        jDescLeitura = new javax.swing.JTextField();
        jMatLeitura = new javax.swing.JFormattedTextField();
        jVectoLeitura = new javax.swing.JFormattedTextField();
        jValorLeitura = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JTable();
        btPrint = new javax.swing.JButton();
        btnAntecip = new javax.swing.JButton();
        msg = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Atualização de taxas");
        setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Leitura", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        jtxLeitor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxLeitorFocusLost(evt);
            }
        });

        jbtClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/Clean_16x16.jpeg"))); // NOI18N
        jbtClear.setPreferredSize(new java.awt.Dimension(16, 16));
        jbtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClearActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(102, 102, 255));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Código");
        jLabel1.setOpaque(true);

        jLabel2.setBackground(new java.awt.Color(102, 102, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Descrição");
        jLabel2.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(102, 102, 255));
        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Matrícula");
        jLabel3.setOpaque(true);

        jLabel4.setBackground(new java.awt.Color(102, 102, 255));
        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Vencimento");
        jLabel4.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(102, 102, 255));
        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Valor");
        jLabel5.setOpaque(true);

        jCodLeitura.setEditable(false);

        jDescLeitura.setEditable(false);

        jMatLeitura.setEditable(false);

        jVectoLeitura.setEditable(false);
        jVectoLeitura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jValorLeitura.setEditable(false);
        jValorLeitura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jValorLeitura.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorLeitura.setText("0,00");
        jValorLeitura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jValorLeituraFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtxLeitor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jCodLeitura))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDescLeitura)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jMatLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jVectoLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jValorLeitura, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtxLeitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtClear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCodLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jVectoLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jValorLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMatLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(".:: Documentos ao caixa"));

        lista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(lista);

        btPrint.setText("Imprimir");
        btPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrintActionPerformed(evt);
            }
        });

        btnAntecip.setText("Imprimir Antecipados");
        btnAntecip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAntecipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAntecip, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPrint)
                    .addComponent(btnAntecip)))
        );

        msg.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        msg.setForeground(new java.awt.Color(0, 153, 0));
        msg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msg.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxLeitorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxLeitorFocusLost
        String tmpLeitura = jtxLeitor.getText().trim();
        String Leituratmp = "";
        if (tmpLeitura.length() == 44) {
            // Mesa
            Leituratmp = tmpLeitura;
        } else if (tmpLeitura.length() == 48) {
            // Mão
            Leituratmp = tmpLeitura.substring(0, 11) + tmpLeitura.substring(12, 23) + tmpLeitura.substring(24, 35) + tmpLeitura.substring(36, 47);
        }
        tmpLeitura = Leituratmp;
        if (tmpLeitura.length() < 44 || tmpLeitura.length() > 48 || tmpLeitura.length() == 0) { return; }
        
        
        Object[][] lCampos = null;
        try {
            lCampos = conn.ReadFieldsTable(new String[] {"CODIGO", "IDCONTA", "MATRICULA", "VALOR", "VENCIMENTO", "VCTOFORMATO"}, "concessionarias", FuncoesGlobais.Subst("IDCONTA = '&1.'",new String[] {jtxLeitor.getText().trim().substring(0, 3)}));
        } catch (Exception e) {}
        
        codigo_carteira = "";
        if (lCampos.length > 0) {
            Object[][] cCampos = null;
            try {
                cCampos = conn.ReadFieldsTable(new String[] {"CART_DESCR"}, "lancart", "CART_CODIGO = '" + lCampos[0][3] + "'");
            } catch (Exception e) {}

            jCodLeitura.setText(lCampos[1][3].toString());
            jDescLeitura.setText(cCampos[0][3].toString());  //lCampos[0][3]);
            codigo_carteira = lCampos[0][3].toString();
            
            int tmp1, tmp2 = 0;
            tmp1 = Integer.valueOf(lCampos[2][3].toString().substring(0,2));
            tmp2 = Integer.valueOf(lCampos[2][3].toString().substring(2,4));
            String tmpMat = tmpLeitura.substring(tmp1 - 1, tmp1 - 1 + tmp2);
            jMatLeitura.setText(tmpMat);
            
            String tmpAno = null, tmpMes = null, tmpDia = null;
            String tmpVecto = null;
            if (lCampos[4][3] != null) {
                if (!lCampos[4][3].equals("0000")) {
                    String dFormat = (String)lCampos[5][3]; dFormat = (dFormat == null ? "" : dFormat);
                    int tmpV = 0;
                    tmpV = Integer.valueOf(lCampos[4][3].toString().substring(0,2));

                    if (dFormat.equals("DDMMYY")) {
                        tmpDia = tmpLeitura.substring(tmpV, tmpV + 2);
                        tmpMes = tmpLeitura.substring(tmpV + 2, tmpV + 4);
                        tmpAno = tmpLeitura.substring(tmpV + 4, tmpV + 6);
                        tmpVecto = tmpDia + "/" + tmpMes + "/" + Dates.DatetoString(new Date()).substring(6, 8) + tmpAno;
                    } else if (dFormat.equals("DDMMYYYY")) {
                        tmpDia = tmpLeitura.substring(tmpV, tmpV + 2);
                        tmpMes = tmpLeitura.substring(tmpV + 2, tmpV + 4);
                        tmpAno = tmpLeitura.substring(tmpV + 4, tmpV + 8);
                        tmpVecto = tmpDia + "/" + tmpMes + "/" + tmpAno;
                    } else if (dFormat.equals("YYMMDD")) {
                        tmpAno = tmpLeitura.substring(tmpV, tmpV + 2);
                        tmpMes = tmpLeitura.substring(tmpV + 2, tmpV + 4);
                        tmpDia = tmpLeitura.substring(tmpV + 4, tmpV + 6);
                        tmpVecto = tmpDia + "/" + tmpMes + "/" + Dates.DatetoString(new Date()).substring(6, 8) + tmpAno;
                    } else if (dFormat.equals("YYYYMMDD")) {
                        tmpAno = tmpLeitura.substring(tmpV, tmpV + 4);
                        tmpMes = tmpLeitura.substring(tmpV + 4, tmpV + 6);
                        tmpDia = tmpLeitura.substring(tmpV + 6, tmpV + 8);
                        tmpVecto = tmpDia + "/" + tmpMes + "/" + tmpAno;
                    }
                } else {
                    String tvecto = JOptionPane.showInputDialog("Entre com o vencimento:");
                    if (!tvecto.isEmpty()) tmpVecto = tvecto;
                }
            } else {
                String tvecto = JOptionPane.showInputDialog("Entre com o vencimento:");
                if (!tvecto.isEmpty()) tmpVecto = tvecto;
            }
            jVectoLeitura.setText(tmpVecto);
            
            String tmpVlr = lCampos[3][3].toString();
            int tmpVr1 = Integer.valueOf(tmpVlr.substring(0, 2));
            int tmpVr2 = Integer.valueOf(tmpVlr.substring(2, 4));
            tmpVlr = tmpLeitura.substring(tmpVr1 - 1, tmpVr1 - 1 + tmpVr2);
            jValorLeitura.setValue(LerValor.FloatNumber(tmpVlr, 2));

            // Verifica se espelho se encontra vencido
            Date wVecto = Dates.StringtoDate(tmpVecto, "dd-MM-yyyy");            
            if (Dates.DateDiff(Dates.DIA, new Date(), wVecto) > 0) {
                Lancar(tmpLeitura, lCampos);
            } else {
                jVectoLeitura.setEnabled(true);
                jVectoLeitura.setEditable(true);
                jValorLeitura.setEnabled(true);
                jValorLeitura.setEditable(true);
                jVectoLeitura.requestFocus();
            }
        }
    }//GEN-LAST:event_jtxLeitorFocusLost

    private void Lancar(String tmpLeitura, Object[][] lCampos) {
        int tmp1, tmp2 = 0;
        tmp1 = Integer.valueOf(lCampos[2][3].toString().substring(0,2));
        tmp2 = Integer.valueOf(lCampos[2][3].toString().substring(2,4));
        String tmpMat = tmpLeitura.substring(tmp1 - 1, tmp1 - 1 + tmp2);
        String tmpTaxa = tmpLeitura.substring(0, 3);
        
        // Aqui começa
        String _Busca = lCampos[0][3].toString().trim() + ":" + tmpMat.trim();
        Object[][] _Campos = null;
        try {
            _Campos = conn.ReadFieldsTable(new String[] {"rgprp","rgimv","situacao","reter"}, "imoveis", " InStr(matriculas,'" + _Busca + "')");
        } catch (Exception e) {}
        if (_Campos != null) {
            ProcessoA(_Busca, _Campos[0][3].toString(), _Campos[1][3].toString());
        } else {
            jAtuTaxasImvs imv = new jAtuTaxasImvs(null, true);
            imv.setTaxa(_Busca);
            imv.setCdTaxa(tmpTaxa);
            imv.setVisible(true);
            try { Thread.sleep(500); } catch(Exception e) {}
            try {
                _Campos = conn.ReadFieldsTable(new String[] {"rgprp","rgimv","situacao","reter"}, "imoveis", " InStr(matriculas,'" + _Busca + "')");
            } catch (Exception e) {}
            if (_Campos != null) {
                ProcessoA(_Busca, _Campos[0][3].toString(), _Campos[1][3].toString());
            }
        }
        
    }
    
    private void ProcessoA(String _Busca, String rgprp, String rgimv) {
        Sici.Partida.Collections gVar = VariaveisGlobais.dCliente;
        String mesg = "";
        ResultSet rs = conn.OpenTable("SELECT rgprp, rgimv, situacao, reter FROM imoveis WHERE InStr(matriculas,'" + _Busca + "') AND Upper(situacao) != 'VAZIO' ORDER BY rgimv;", null);
        int rows = 0; float valor = 0;
        try {
            if (rs.last()) rows = rs.getRow();
            rs.beforeFirst();
            if (rows > 0) {
                valor = LerValor.StringToFloat(jValorLeitura.getText());
                Boolean breter = false;
                while (rs.next()) {
                    breter = rs.getBoolean("reter");
                    Date dtLeitura = Dates.StringtoDate(jVectoLeitura.getText(), "dd-MM-yyyy");
                    Object[][] _Carteira = conn.ReadFieldsTable(new String[] {"contrato", "campo"}, "carteira", "rgimv = '" + rgimv + "'");
                    String campo = _Carteira[1][3].toString();
                    String contrato = _Carteira[0][3].toString();
                    String[][] _campos = FuncoesGlobais.treeArray(campo, false);
                    Boolean eAT = false;
                    int pos = FuncoesGlobais.FindinArrays(_campos, 0, _Busca.substring(0,2));
                    if (pos > -1) {
                        _campos[pos][2] = FuncoesGlobais.GravaValor(LerValor.FloatToString(valor/rows));
                        if (_campos[pos][_campos[pos].length - 1].equalsIgnoreCase("AT")) {
                            if (!Dates.isDateValid(_campos[pos][4],"ddMMyyyy")) {
                                _campos[pos] = FuncoesGlobais.ArrayAddPos(_campos[pos], Dates.DateFormata("ddMMyyyy", dtLeitura), 4);
                            } else {
                                _campos[pos][4] = Dates.DateFormata("ddMMyyyy", dtLeitura);
                            }
                            eAT = true;
                        }
                    } else {
                        Object[][] _LanCart = conn.ReadFieldsTable(new String[] {"cart_codigo","cart_ordem","cart_retencao","cart_antecipa"}, "lancart", "cart_codigo = '" + _Busca.substring(0,2) + "'");
                        String[] _campo = null;
                        if (_LanCart[3][3].toString().equalsIgnoreCase("0")) {
                            _campo = new String[] {_LanCart[0][3].toString(),_LanCart[1][3].toString(),FuncoesGlobais.GravaValor(LerValor.FloatToString(valor/rows)),
                                                        "0000","NT","RZ","ET","IP"};
                        } else {
                            _campo = new String[] {_LanCart[0][3].toString(),_LanCart[1][3].toString(),FuncoesGlobais.GravaValor(LerValor.FloatToString(valor/rows)),
                                                        "0000",Dates.DateFormata("ddMMyyyy", dtLeitura),"NT","RZ","ET","IP","AT"};
                            eAT = true;
                        }
                        _campos = FuncoesGlobais.ArraysAdd(_campos, _campo);
                    }
                    campo = FuncoesGlobais.SuperJoin(_campos, true);
                    
                    try {
                        String sql = "UPDATE carteira SET campo = '" + campo + "' WHERE contrato = '" + contrato + "';";
                        conn.CommandExecute(sql);
                    } catch (Exception e) {}

                    // Inserir taxa na tabela ANTECIPADOS
                    if (eAT) {
                        String qcampo = null;
                        if (pos > -1) {
                            qcampo = FuncoesGlobais.join(_campos[pos],":");
                        } else {
                            qcampo = FuncoesGlobais.join(_campos[_campos.length - 1], ":");
                        }
                        Object[][] _Antecp = conn.ReadFieldsTable(new String[] {"contrato"}, "antecipados", 
                                   "contrato = '" + contrato + "' AND Mid(campo,1,2) = '" + _Busca.substring(0,2) +
                                   "' AND dtvencimento = '" + Dates.DateFormata("yyyy-MM-dd", dtLeitura) + "'");
                        if (_Antecp == null) {
                            try {
                                String sql = "INSERT INTO antecipados " +
                                "(`rgprp`,`rgimv`,`contrato`,`campo`,`dtvencimento`) VALUES ('" + rgprp + "','" + rgimv + "','" + contrato + "','" +
                                qcampo + "','" + Dates.DateFormata("yyyy-MM-dd", dtLeitura) + "')";
                                conn.CommandExecute(sql);
                            } catch (Exception e) {}
                        }
                    
                        // Inserir na listagem para impressao
                        if (TableControl.seek(lista, 1, jMatLeitura.getText()) < 0) {
                            String[][] aitens = new String[][] {{"","A", jMatLeitura.getText(), jVectoLeitura.getText(), jValorLeitura.getText()},{"C","C","L","C","R"}};
                            TableControl.add(lista, aitens, true);
                            try {
                                String sql = "INSERT INTO ataxas (`tipo`,`matricula`,`vencimento`,`valor`) VALUES (" + "'A" + "','" + 
                                jMatLeitura.getText() + "','" + Dates.DateFormata("yyyy-MM-dd", Dates.StringtoDate(jVectoLeitura.getText(),"dd-MM-yyyy")) + "','" + LerValor.StringToFloat(jValorLeitura.getText()) + "');";
                                conn.CommandExecute(sql);
                            } catch (Exception e) {}
                        } else { mesg = "Item já incluso na lista!!!"; }
                    }
                    
                    
                    // verifica recibo pago
                    String mCpoDesc = ""; String str = ""; float difevalor = 0f; String mTipo = "";
                    Object[][] _RECIBOPG = conn.ReadFieldsTable(new String[] {"contrato","campo","rgprp","rgimv"}, "recibo", "contrato = '" + contrato + "' AND tag = 'X' AND " +
                                         "SUBSTRING(dtvencimento,1,7) = '" + Dates.DateFormata("yyyy-MM", dtLeitura) + "';");
                    if (_RECIBOPG != null) {
                        this.contrato = _RECIBOPG[0][3].toString();
                        String wcampo = _RECIBOPG[1][3].toString();
                        String[][] _wcampos = FuncoesGlobais.treeArray(wcampo, false);
                        int npos = FuncoesGlobais.FindinArrays(_wcampos, 0, _Busca.substring(0,2));
                        if (npos > -1) {
                            float pgvalor = LerValor.StringToFloat(LerValor.FormatNumber(_wcampos[npos][2],2));
                            difevalor = pgvalor - valor;
                            if (difevalor > 0) {
                                // desconto
                                Object[][] _LanCart = conn.ReadFieldsTable(new String[] {"cart_codigo","cart_ordem","cart_retencao","cart_descr"}, "lancart", "cart_codigo = '" + _Busca.substring(0,2) + "'");
                                str = _LanCart[3][3].toString().trim();
                                mTipo = "";
                                if (str.trim().toUpperCase().contains("ALUGUEL")) {
                                    mTipo = "AL:IP";
                                } else {
                                    mTipo = "BR";
                                }

                                mCpoDesc = ";DC:2:" + FuncoesGlobais.GravaValor(LerValor.FloatToString(difevalor)) + ":0000:DC:" + mTipo + ":ET:DS" + FuncoesGlobais.CriptaNome(gVar.get("DC") + " " + str.trim().toUpperCase()); 
                            } else {
                                // diferença
                                Object[][] _LanCart = conn.ReadFieldsTable(new String[] {"cart_codigo","cart_ordem","cart_retencao","cart_descr"}, "lancart", "cart_codigo = '" + _Busca.substring(0,2) + "'");
                                str = _LanCart[3][3].toString().trim();

                                mTipo = "";
                                if (str.trim().toUpperCase().contains("ALUGUEL")) {
                                    mTipo = "AL:LQ:ET";
                                } else {
                                    String auxExt = "ET";
                                    mTipo = auxExt;
                                }

                                mCpoDesc = ";DF:2:" + FuncoesGlobais.GravaValor(LerValor.FloatToString(difevalor*-1)) + ":0000:DF:RZ:" + mTipo + ":DS" + FuncoesGlobais.CriptaNome(gVar.get("DF") + " " + str.trim().toUpperCase());
                            }
                        }                    
                    }
                    
                    Object[][] _RECIBO = conn.ReadFieldsTable(new String[] {"contrato","campo"}, "recibo", "contrato = '" + contrato + "' AND tag != 'X' AND " +
                                         "SUBSTRING(dtvencimento,1,7) = '" + Dates.DateFormata("yyyy-MM", new Date()) + "';");
                    if (_RECIBO != null) {
                        String wcontrato = _RECIBO[0][3].toString();
                        String wcampo = _RECIBO[1][3].toString();
                        String[][] _wcampos = FuncoesGlobais.treeArray(wcampo, false);
                        int npos = FuncoesGlobais.FindinArrays(_wcampos, 0, _Busca.substring(0,2));
                        if (npos > -1) {
                            _wcampos[pos][2] = FuncoesGlobais.GravaValor(LerValor.FloatToString(valor/rows));
                        } else {
                            Object[][] _LanCart = conn.ReadFieldsTable(new String[] {"cart_codigo","cart_ordem","cart_retencao"}, "lancart", "cart_codigo = '" + _Busca.substring(0,2) + "'");
                            String[] _campo = new String[] {_LanCart[0][3].toString(),_LanCart[1][3].toString(),FuncoesGlobais.GravaValor(LerValor.FloatToString(valor/rows)),
                                                            "0000","NT","RZ","ET","IP"};
                            _wcampos = FuncoesGlobais.ArraysAdd(_wcampos, _campo);
                        }
                        wcampo = FuncoesGlobais.SuperJoin(_wcampos, true);
                        wcampo += mCpoDesc;

                        try {
                            String sql = "UPDATE recibo SET campo = '" + wcampo + "' WHERE contrato = '" + wcontrato + "';";
                            conn.CommandExecute(sql);
                        } catch (Exception e) {}
                    } else {
                        String sql = null;
                        if (mCpoDesc.contains("DC:2")) {
                            // desconto
                            String argprp = _RECIBOPG[2][3].toString();
                            String argimv = _RECIBOPG[3][3].toString();
                            String acontrato = _RECIBOPG[0][3].toString();
                            String adescricao = str + " " + Dates.StringtoString(jVectoLeitura.getText(), "dd/MM/yyyy", "MM/yyyy");
                            String avalor = FuncoesGlobais.GravaValor(LerValor.FloatToString(difevalor));
                            String areferencia = Dates.DateFormata("MM/yyyy", new Date());
                            String asigla = mTipo;
                            sql = "INSERT INTO descontos VALUES ('" + argprp + "','" + argimv + "','" + acontrato + "','" +
                                    adescricao + "','" + avalor + "','" + areferencia + "','" + asigla + "');";
                        } else if (mCpoDesc.contains("DF:2")) {
                            // diferenca
                            String argprp = _RECIBOPG[2][3].toString();
                            String argimv = _RECIBOPG[3][3].toString();
                            String acontrato = _RECIBOPG[0][3].toString();
                            String adescricao = str + " " + Dates.StringtoString(jVectoLeitura.getText(), "dd/MM/yyyy", "MM/yyyy");
                            String avalor = FuncoesGlobais.GravaValor(LerValor.FloatToString(difevalor*-1));
                            String areferencia = Dates.DateFormata("MM/yyyy", new Date());
                            String asigla = mTipo;
                            sql = "INSERT INTO diferenca VALUES ('" + argprp + "','" + argimv + "','" + acontrato + "','" +
                                    adescricao + "','" + avalor + "','" + areferencia + "','" + asigla + "');";
                        }
                        try {
                            if (sql != null) conn.CommandExecute(sql);
                        } catch (Exception e) {}
                    }
                }
                
                mesg = "<html><font size=+2 color=#ff0000><center>Atualizado com sucesso!!!</center></font></html>   " + (breter ? "<html><font color=#ff0000>bancado</font></html>" : "");
                
            } else {
                // mandar para lista
                if (TableControl.seek(lista, 1, jMatLeitura.getText()) < 0) {
                    String[][] aitens = new String[][] {{"","P",jMatLeitura.getText(), jVectoLeitura.getText(), jValorLeitura.getText()},{"C","C","L","C","R"}};
                    TableControl.add(lista, aitens, true);
                    try {
                        String sql = "INSERT INTO ataxas (`tipo`,`matricula`,`vencimento`,`valor`) VALUES (" + "'P" + "','" + 
                        jMatLeitura.getText() + "','" + Dates.DateFormata("yyyy-MM-dd", Dates.StringtoDate(jVectoLeitura.getText(),"dd-MM-yyyy")) + "','" + LerValor.StringToFloat(jValorLeitura.getText()) + "');";
                        conn.CommandExecute(sql);
                    } catch (Exception e) {}
                } else { mesg = "Item já incluso na lista!!!"; }
            }
        } catch (Exception e) {e.printStackTrace();}
        conn.CloseTable(rs);

        msg.setText(mesg);
        LimpaCampos();
    }
    
    private static void viewReportFrame( String titulo, JasperPrint print ) {

            /*
             * Cria um JRViewer para exibir o relatório.
             * Um JRViewer é uma JPanel.
             */
            JRViewer viewer = new JRViewer( print );

            // cria o JFrame
            JFrame frameRelatorio = new JFrame( titulo );

            // adiciona o JRViewer no JFrame
            frameRelatorio.add( viewer, BorderLayout.CENTER );

            // configura o tamanho padrão do JFrame
            frameRelatorio.setSize( 500, 500 );

            // maximiza o JFrame para ocupar a tela toda.
            frameRelatorio.setExtendedState( JFrame.MAXIMIZED_BOTH );

            // configura a operação padrão quando o JFrame for fechado.
            frameRelatorio.setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );

            // exibe o JFrame
            frameRelatorio.setAlwaysOnTop(true);
            frameRelatorio.setVisible( true );

        }    
    
    
    private void jbtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClearActionPerformed
        LimpaCampos();
        
        jVectoLeitura.setEnabled(true);
        jVectoLeitura.setEditable(false);
        jValorLeitura.setEnabled(true);
        jValorLeitura.setEditable(false);
    }//GEN-LAST:event_jbtClearActionPerformed

    private void btPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrintActionPerformed
        try {
            String fileName = "reports/aTaxas.jasper";
            JasperPrint print = JasperFillManager.fillReport(fileName, null, conn.conn);

            // Create a PDF exporter
            JRExporter exporter = new JRPdfExporter();

            new jDirectory("reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/");
            String pathName = "reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/";
            
            // Configure the exporter (set output file name and print object)
            String outFileName = pathName + "aTaxas_" + Dates.DateFormata("ddMMyyyyHHmmss", new Date()) + ".pdf";
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, outFileName);
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);

            // Export the PDF file
            exporter.exportReport();

            //JasperViewer viewer = new JasperViewer(print, false);
            //viewer.show();
            viewReportFrame("Documentos ao Caixa", print);
            
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(null,
                "Deseja excluir lista ? ",
                "Atenção", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (n == JOptionPane.YES_OPTION) {
                String sql = "DELETE FROM ataxas WHERE tipo = 'P';";
                conn.CommandExecute(sql);
            }
        } catch (JRException e) {
            e.printStackTrace();
            System.exit(1);
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }//GEN-LAST:event_btPrintActionPerformed

    private void jValorLeituraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jValorLeituraFocusLost
        if (jValorLeitura.isEditable()) {
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(null,
                "Deseja lançar esta Conta ??? ",
                "Atenção", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (n == JOptionPane.YES_OPTION) {
                String tmpLeitura = jtxLeitor.getText().trim();
                String Leituratmp = "";
                if (tmpLeitura.length() == 44) {
                    // Mesa
                    Leituratmp = tmpLeitura;
                } else if (tmpLeitura.length() == 48) {
                    // Mão
                    Leituratmp = tmpLeitura.substring(0, 11) + tmpLeitura.substring(12, 23) + tmpLeitura.substring(24, 35) + tmpLeitura.substring(36, 47);
                }
                tmpLeitura = Leituratmp;
                if (tmpLeitura.length() < 44 || tmpLeitura.length() > 48 || tmpLeitura.length() == 0) { return; }
                
                Object[][] lCampos = null;
                try {
                    lCampos = conn.ReadFieldsTable(new String[] {"CODIGO", "IDCONTA", "MATRICULA", "VALOR", "VENCIMENTO", "VCTOFORMATO"}, "concessionarias", FuncoesGlobais.Subst("IDCONTA = '&1.'",new String[] {jtxLeitor.getText().trim().substring(0, 3)}));
                } catch (Exception e) {}

                codigo_carteira = "";
                if (lCampos.length > 0) {
                    Lancar(tmpLeitura, lCampos);
                }

                LimpaCampos();
                jVectoLeitura.setEnabled(true);
                jVectoLeitura.setEditable(false);
                jValorLeitura.setEnabled(true);
                jValorLeitura.setEditable(false);
            }
        }
    }//GEN-LAST:event_jValorLeituraFocusLost

    private void btnAntecipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAntecipActionPerformed
        try {
            String fileName = "reports/aTaxasAntecip.jasper";
            JasperPrint print = JasperFillManager.fillReport(fileName, null, conn.conn);

            // Create a PDF exporter
            JRExporter exporter = new JRPdfExporter();

            new jDirectory("reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/");
            String pathName = "reports/Relatorios/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/";
            
            // Configure the exporter (set output file name and print object)
            String outFileName = pathName + "aTaxasAntecip_" + Dates.DateFormata("ddMMyyyyHHmmss", new Date()) + ".pdf";
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, outFileName);
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);

            // Export the PDF file
            exporter.exportReport();

            //JasperViewer viewer = new JasperViewer(print, false);
            //viewer.show();
            viewReportFrame("Documentos Antecipados ao Caixa", print);
            
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(null,
                "Deseja excluir lista de antecipados ? ",
                "Atenção", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (n == JOptionPane.YES_OPTION) {
                String sql = "DELETE FROM ataxas WHERE tipo = 'A';";
                conn.CommandExecute(sql);
            }
        } catch (JRException e) {
            e.printStackTrace();
            System.exit(1);
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }//GEN-LAST:event_btnAntecipActionPerformed

    private void LimpaCampos() {
        jtxLeitor.setText("");
        jCodLeitura.setText("");
        jDescLeitura.setText("");
        jMatLeitura.setText("");
        jVectoLeitura.setText("");
        jValorLeitura.setText("0,00");
        
        jtxLeitor.requestFocus();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPrint;
    private javax.swing.JButton btnAntecip;
    private javax.swing.JFormattedTextField jCodLeitura;
    private javax.swing.JTextField jDescLeitura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JFormattedTextField jMatLeitura;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jValorLeitura;
    private javax.swing.JFormattedTextField jVectoLeitura;
    private javax.swing.JButton jbtClear;
    private javax.swing.JTextField jtxLeitor;
    private javax.swing.JTable lista;
    private javax.swing.JLabel msg;
    // End of variables declaration//GEN-END:variables
}
