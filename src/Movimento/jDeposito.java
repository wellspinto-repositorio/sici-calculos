/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jDeposito.java
 *
 * Created on 02/06/2011, 09:40:37
 */
package Movimento;

import Funcoes.Autenticacao;
import Funcoes.AutoCompletion;
import Funcoes.Dates;
import Funcoes.Db;
import Funcoes.FuncoesGlobais;
import Funcoes.LerValor;
import Funcoes.VariaveisGlobais;
import Funcoes.jPDF;
import Funcoes.jTableControl;
import Funcoes.toPrint;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.BarcodeInter25;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.draw.LineSeparator;
import com.lowagie.text.Element;
import Sici.Partida.Collections;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author supervisor
 */
public class jDeposito extends javax.swing.JInternalFrame {
    jTableControl tabela = new jTableControl(true);
    static Db conn = VariaveisGlobais.conexao;
    /** Creates new form jDeposito */
    @SuppressWarnings("BooleanConstructorCall")
    public jDeposito() {
        initComponents();
        
        // Icone da tela
        FlatSVGIcon icone = new FlatSVGIcon("menuIcons/deposito.svg",16,16);
        setFrameIcon(icone);
        
        try {FillCheques();} catch (SQLException ex) {ex.printStackTrace();}
        FillBancos();                
    }

    private void FillBancos() {
        String sql = "SELECT codigo, nome FROM bancos ORDER BY codigo;";
        ResultSet brs = null;
        try {
            brs = conn.OpenTable(sql, null);
        } catch (Exception ex ) {ex.printStackTrace();}
        
        try {
            while (brs.next()) {
                jBancosCod.addItem(brs.getString("codigo"));
                jBancosNome.addItem(brs.getString("nome"));
            }
        } catch (SQLException ex) {ex.printStackTrace();}
        AutoCompletion.enable(jBancosCod);
        AutoCompletion.enable(jBancosNome);
    }
    
    private void FillCheques() throws SQLException {
        String sql = "SELECT ch_data, ch_data2, ch_banco, ch_agencia, ch_ncheque, SUM(ch_valor) AS ch_valor " +
                 "FROM cheques WHERE Lower(TRIM(ch_ncaixa)) = '&1.' " +
                 "GROUP BY ch_data, ch_banco, ch_agencia, ch_ncheque " +
                 "ORDER BY ch_data2,ch_data,ch_ncheque;";
        sql = FuncoesGlobais.Subst(sql, new String[] {VariaveisGlobais.usuario.toLowerCase().trim()});

        ResultSet rs = conn.OpenTable(sql, null);
        Integer[] tam = {100,100,50,80,90,90,50,20};
        String[] col = {"Dt.Lanc","Dt.Dep","Banco","Agencia","Cheque N°","Valor","Tipo","tag"};
        Boolean[] edt = {false,false,false,false,false,false,false,true};
        String[] aln = {"C","C","C","C","C","R","C",""};
        Object[][] data = {};
        while (rs.next()) {
            String dDtLanc = Dates.DateFormata("dd/MM/yyyy", rs.getDate("ch_data"));
            
            String dDtDep = null;
            String dTipo = null;
            try {
                if (rs.getString("ch_data2") != "0000-00-00") {
                    if (rs.getString("ch_data2") != null) { dDtDep = Dates.DateFormata("dd/MM/yyyy", rs.getDate("ch_data2")); dTipo = "CP";}
                    else { dDtDep = Dates.DateFormata("dd/MM/yyyy", rs.getDate("ch_data")); dTipo = "CH";}
                }
            } catch (SQLException ex) {dDtDep = Dates.DateFormata("dd/MM/yyyy", rs.getDate("ch_data")); dTipo = "CH";}
            
            String dBanco = rs.getString("ch_banco");
            String dAgencia = rs.getString("ch_agencia");
            String dCheque = rs.getString("ch_ncheque");
            String dValor = LerValor.floatToCurrency(rs.getFloat("ch_valor"),2);
            Boolean dTag = false;
            
            Object[] dado = {dDtLanc, dDtDep, dBanco, dAgencia, dCheque, dValor, dTipo, dTag};
            data = tabela.insert(data, dado);
        }
        conn.CloseTable(rs);
        tabela.Show(jDep, data, tam, aln, col, edt);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jDep = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jVRCP = new javax.swing.JFormattedTextField();
        jNCP = new javax.swing.JTextField();
        jVRCH = new javax.swing.JFormattedTextField();
        jNCH = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jVRDN = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTotDepositar = new javax.swing.JFormattedTextField();
        jbtDepositar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jBancosNome = new javax.swing.JComboBox();
        jBancosCod = new javax.swing.JComboBox();
        jSelAllChCM = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Depósitos ::.");
        setVisible(true);

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 8));

        jDep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jDep.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jDep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDepMouseClicked(evt);
            }
        });
        jDep.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDepPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jDep);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Total Cheques Pré:");

        jVRCP.setEditable(false);
        jVRCP.setForeground(new java.awt.Color(0, 0, 153));
        jVRCP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRCP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRCP.setText("0,00");

        jNCP.setEditable(false);
        jNCP.setForeground(new java.awt.Color(0, 153, 153));
        jNCP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jNCP.setText("000");

        jVRCH.setEditable(false);
        jVRCH.setForeground(new java.awt.Color(0, 0, 153));
        jVRCH.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRCH.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRCH.setText("0,00");

        jNCH.setEditable(false);
        jNCH.setForeground(new java.awt.Color(0, 153, 153));
        jNCH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jNCH.setText("000");

        jLabel2.setText("Total Cheques Comum:");

        jVRDN.setForeground(new java.awt.Color(0, 102, 0));
        jVRDN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRDN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRDN.setText("0,00");
        jVRDN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jVRDNFocusLost(evt);
            }
        });

        jLabel3.setText("Valor Dinheiro a Depositar:");

        jLabel4.setText("Total a Depositar:");

        jTotDepositar.setEditable(false);
        jTotDepositar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jTotDepositar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTotDepositar.setText("0,00");

        jbtDepositar.setText("Depositar");
        jbtDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDepositarActionPerformed(evt);
            }
        });

        jLabel5.setText("Banco a Depositar:");

        jBancosNome.setEditable(true);
        jBancosNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBancosNomeActionPerformed(evt);
            }
        });

        jBancosCod.setEditable(true);
        jBancosCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBancosCodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(8, 8, 8)
                                .addComponent(jNCP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jVRCP, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addComponent(jVRDN, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(8, 8, 8)
                                .addComponent(jNCH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jVRCH, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTotDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBancosCod, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBancosNome, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtDepositar, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jNCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jVRCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jVRDN)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jNCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jVRCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTotDepositar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jBancosCod, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBancosNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtDepositar, 0, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jSelAllChCM.setText("Selecionar todos os Cheques Comuns");
        jSelAllChCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelAllChCMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSelAllChCM, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSelAllChCM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDepPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDepPropertyChange

    }//GEN-LAST:event_jDepPropertyChange

    private void Totaliza() {
        float tch = 0; float tcp = 0; float tdn = 0; int nch = 0; int ncp = 0;
        for (int i=0; i< jDep.getRowCount(); i++) {
            if ("true".equals(jDep.getModel().getValueAt(i, 7).toString().toLowerCase())) {
                if ("CH".equals(jDep.getModel().getValueAt(i, 6).toString())) {tch += LerValor.StringToFloat(jDep.getModel().getValueAt(i, 5).toString()); nch++;}
                if ("CP".equals(jDep.getModel().getValueAt(i, 6).toString())) {tcp += LerValor.StringToFloat(jDep.getModel().getValueAt(i, 5).toString()); ncp++;}
            }
        }
        jNCP.setText(FuncoesGlobais.StrZero(String.valueOf(ncp), 3));
        jVRCP.setText(LerValor.floatToCurrency(tcp, 2));
        
        jNCH.setText(FuncoesGlobais.StrZero(String.valueOf(nch), 3));
        jVRCH.setText(LerValor.floatToCurrency(tch, 2));

        tdn = LerValor.StringToFloat(jVRDN.getText());
        jTotDepositar.setText(LerValor.floatToCurrency(tdn + tch + tcp, 2));
    }

    private void SelectAllCHComum() {
        for (int i=0; i< jDep.getRowCount(); i++) {
            if ("ch".equals(jDep.getModel().getValueAt(i, 6).toString().toLowerCase())) {
                jDep.getModel().setValueAt(new Boolean((jSelAllChCM.isSelected() ? true : false)), i, 7);            
            }
        }
    }
    
    private void jDepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDepMouseClicked
        Totaliza();
    }//GEN-LAST:event_jDepMouseClicked

    private void jVRDNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jVRDNFocusLost
        Totaliza();
    }//GEN-LAST:event_jVRDNFocusLost

    private void jSelAllChCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelAllChCMActionPerformed
        SelectAllCHComum();
        Totaliza();
    }//GEN-LAST:event_jSelAllChCMActionPerformed

    private void jBancosCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBancosCodActionPerformed
        int pos = jBancosCod.getSelectedIndex();
        if (jBancosNome.getItemCount() > 0) jBancosNome.setSelectedIndex(pos);

    }//GEN-LAST:event_jBancosCodActionPerformed

    private void jBancosNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBancosNomeActionPerformed
        int pos = jBancosNome.getSelectedIndex();
        if (jBancosCod.getItemCount() > 0) jBancosCod.setSelectedIndex(pos);

    }//GEN-LAST:event_jBancosNomeActionPerformed

    private void jbtDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDepositarActionPerformed
        if (LerValor.StringToFloat(jVRCH.getText()) + LerValor.StringToFloat(jVRCP.getText()) + LerValor.StringToFloat(jVRDN.getText()) <= 0) return;
            
        float nAut = 0;
        try {
            nAut = Imprimir();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        if (nAut < 0) return;
        
        // Gravar no caixa
        final String Sql = "INSERT INTO caixa (cx_aut, cx_data, cx_hora, cx_logado, cx_contrato, cx_rgprp, " + 
           "cx_rgimv, cx_oper, cx_vrdn, cx_vrch, cx_chrel, cx_tipopg, cx_doc, cx_ndocs) " + 
           "VALUES ('&1.', '&2.', '&3.', '&4.', '&5.', '&6.', '&7.', '&8.', '&9.', '&10.', '&11.', '&12.', '&13.', '&14.')";

        final String auxSql = "INSERT INTO auxiliar (conta, contrato, campo, dtvencimento, dtrecebimento, rc_aut) VALUES ('&1.','&2.','&3.','&4.','&5.','&6.');";
        
        String sAut = FuncoesGlobais.StrZero(String.valueOf(nAut), 6);
        
        if (LerValor.StringToFloat(jVRDN.getText()) > 0) {
            String dn_Sql = FuncoesGlobais.Subst(Sql, new String[] {sAut, 
                  Dates.DateFormata("yyyy-MM-dd", new Date()),
                  Dates.DateFormata("HH:mm:ss", new Date()),
                  VariaveisGlobais.usuario,
                  "","","","DEB",
                  String.valueOf(LerValor.StringToFloat(jVRDN.getText())),
                  "0.00",
                  "","DN","DS","1"});
            conn.CommandExecute(dn_Sql);
            
            String sVar = "DS:9:" + FuncoesGlobais.GravaValor(jVRDN.getText()) + ":000000:DS:" + FuncoesGlobais.StrZero(String.valueOf(nAut), 10) + ":" + Dates.DateFormata("ddMMyyyy", new Date()) + ":DEB:" + FuncoesGlobais.CriptaNome("DEPOSITO DINHEIRO") + ":" + VariaveisGlobais.usuario;
            String dn_auxSql = FuncoesGlobais.Subst(auxSql, new String[] {"DEP","DN",sVar,
                               Dates.DateFormata("yyyy/MM/dd", new Date()),Dates.DateFormata("yyyy/MM/dd", new Date()),
                               sAut});
            conn.CommandExecute(dn_auxSql);
        }
        
        if (LerValor.StringToFloat(jVRCH.getText()) > 0) {
            String ch_Sql = FuncoesGlobais.Subst(Sql, new String[] {sAut, 
                  Dates.DateFormata("yyyy-MM-dd", new Date()),
                  Dates.DateFormata("HH:mm:ss", new Date()),
                  VariaveisGlobais.usuario,
                  "","","","DEB",
                  "0.00",
                  String.valueOf(LerValor.StringToFloat(jVRCH.getText())),
                  "","CH","DS","1"});
            conn.CommandExecute(ch_Sql);
            
            String sVar = "DS:9:" + FuncoesGlobais.GravaValor(jVRCH.getText()) + ":000000:DS:" + FuncoesGlobais.StrZero(String.valueOf(nAut), 10) + ":" + Dates.DateFormata("ddMMyyyy", new Date()) + ":DEB:" + FuncoesGlobais.CriptaNome("DEPOSITO CHEQUE") + ":" + VariaveisGlobais.usuario;
            String ch_auxSql = FuncoesGlobais.Subst(auxSql, new String[] {"DEP","CH",sVar,
                               Dates.DateFormata("yyyy/MM/dd", new Date()),Dates.DateFormata("yyyy/MM/dd", new Date()),
                               sAut});
            conn.CommandExecute(ch_auxSql);
        }
        
        if (LerValor.StringToFloat(jVRCP.getText()) > 0) {
            String cp_Sql = FuncoesGlobais.Subst(Sql, new String[] {sAut, 
                  Dates.DateFormata("yyyy-MM-dd", new Date()),
                  Dates.DateFormata("HH:mm:ss", new Date()),
                  VariaveisGlobais.usuario,
                  "","","","DEB",
                  "0.00",
                  String.valueOf(LerValor.StringToFloat(jVRCP.getText())),
                  "","CP","DS","1"});
            conn.CommandExecute(cp_Sql);
            
            String sVar = "DS:9:" + FuncoesGlobais.GravaValor(jVRCP.getText()) + ":000000:DS:" + FuncoesGlobais.StrZero(String.valueOf(nAut), 10) + ":" + Dates.DateFormata("ddMMyyyy", new Date()) + ":DEB:" + FuncoesGlobais.CriptaNome("DEPOSITO PRE") + ":" + VariaveisGlobais.usuario;
            String cp_auxSql = FuncoesGlobais.Subst(auxSql, new String[] {"DEP","CP",sVar,
                               Dates.DateFormata("yyyy/MM/dd", new Date()),Dates.DateFormata("yyyy/MM/dd", new Date()),
                               sAut});
            conn.CommandExecute(cp_auxSql);
        }
                
        for (int c=0; c< jDep.getRowCount(); c++) {
            if ("true".equals(jDep.getModel().getValueAt(c, 7).toString().toLowerCase())) {
                String sBck = "INSERT INTO Chequesbck (SELECT ch_data, ch_data2, ch_banco, ch_agencia, ch_ncheque, ch_valor, ch_ncaixa, ch_autenticacao, '" +
                              sAut + "', '" + Dates.DateFormata("yyyy-MM-dd", new Date()) + "' FROM Cheques WHERE ch_data = '&1.' AND ch_banco = '&2.' AND ch_agencia = '&3.' AND ch_ncheque = '&4.' AND UPPER(TRIM(ch_ncaixa)) = '&5.')";
                sBck = FuncoesGlobais.Subst(sBck, new String[] { 
                       Dates.DateFormata("yyyy-MM-dd", Dates.StringtoDate(jDep.getModel().getValueAt(c, 0).toString(),"dd/MM/yyyy")),
                       jDep.getModel().getValueAt(c, 2).toString(),
                       jDep.getModel().getValueAt(c, 3).toString(),
                       jDep.getModel().getValueAt(c, 4).toString(),
                       VariaveisGlobais.usuario.toUpperCase().trim()});
                
                conn.CommandExecute(sBck);
                
                String sDel = "DELETE FROM Cheques WHERE ch_data = '&1.' AND ch_banco = '&2.' AND ch_agencia = '&3.' AND ch_ncheque = '&4.' AND UPPER(TRIM(ch_ncaixa)) = '&5.'";
                sDel = FuncoesGlobais.Subst(sDel, new String[] {
                       Dates.DateFormata("yyyy-MM-dd", Dates.StringtoDate(jDep.getModel().getValueAt(c, 0).toString(),"dd/MM/yyyy")),
                       jDep.getModel().getValueAt(c, 2).toString(),
                       jDep.getModel().getValueAt(c, 3).toString(),
                       jDep.getModel().getValueAt(c, 4).toString(),
                       VariaveisGlobais.usuario.toUpperCase().trim()});
                
                conn.CommandExecute(sDel);
            }
        }
        try {
            FillCheques();
            jNCP.setText("000");
            jVRCP.setText("0,00");
            jNCH.setText("000");
            jVRCH.setText("0,00");
            jVRDN.setText("0,00");
            jTotDepositar.setText("0,00");
            jBancosCod.setSelectedIndex(0);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jbtDepositarActionPerformed

    public float Imprimir() throws SQLException {
        jDep.setEnabled(false);
        float nAut = 0;
        
        // Autenticacao
        nAut = (float)Autenticacao.getAut();
        if (!Autenticacao.setAut((double)nAut, 1)) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar autenticacão!!!\nChane o suporte técnico...", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return -1;
        }

        ImprimeDepositosPDF(nAut, new String[][] {{jVRCH.getText(),jNCH.getText()}, {jVRCP.getText(),jNCP.getText()}, {jVRDN.getText()}, {jTotDepositar.getText()}}, "F");
        jDep.setEnabled(true);
        return nAut;
    }

   public void ImprimeDepositosPDF(float nAut, String[][] ValorRec, String cutPaper) {
        float[] columnWidths = {};
        Collections gVar = VariaveisGlobais.dCliente;
        jPDF pdf = new jPDF();

        PdfPCell cell1, cell2, cell3, cell4, cell5, cell6, cell7;        
        
        String docID = ".pdf";
        String docName = "DS_" + Dates.DateFormata("dd-MM-yyyy", new Date()) + "_" + FuncoesGlobais.StrZero(String.valueOf((int)nAut), 7) + docID;        
        String pathName = "reports/Recibos/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/";
        pdf.setPathName(pathName);
        pdf.setDocName(docName);
        
        BaseFont bf = null;
        try {
            bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.EMBEDDED);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        com.itextpdf.text.Font font = new com.itextpdf.text.Font(bf, 9, Font.PLAIN);

        pdf.open();
        
        // Logo
        com.itextpdf.text.Image img;
        try {
            img = com.itextpdf.text.Image.getInstance("resources/logos/boleta/" + VariaveisGlobais.dCliente.get("marca").trim() + ".gif");
            img.setAlignment(Element.ALIGN_LEFT);        
            pdf.doc_add(img);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        Paragraph p;
        
        p = pdf.print(gVar.get("empresa"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        if (!gVar.get("cnpj").trim().equals("") || gVar.get("cnpj") != null) {
            p = pdf.print(gVar.get("tipodoc"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT,pdf.BLACK);
            pdf.doc_add(p);
        }
        p = pdf.print(gVar.get("endereco") + ", " + gVar.get("numero") + " " + gVar.get("complemento"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print(gVar.get("bairro") + " - " + gVar.get("cidade") + " - " + gVar.get("estado") + " - " + gVar.get("cep"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print("Tel/Fax:" + gVar.get("telefone"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print("  D E P O S I T O S   ", pdf.HELVETICA, 12, pdf.BOLD, pdf.CENTER, pdf.RED);
        pdf.doc_add(p);
        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        
        columnWidths = new float[] {37, 63 };
        PdfPTable table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);
        font = new com.itextpdf.text.Font(bf, 9, Font.PLAIN);
        font.setColor(BaseColor.BLACK);
        
        cell1 = new PdfPCell(new Phrase("CAIXA: " + VariaveisGlobais.usuario,font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell1);
        cell2 = new PdfPCell(new Phrase("Data/Hora: " + Dates.DateFormata("dd/MM/yyyy HH:mm", new Date()),font));
        cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell2.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell2);
        table.completeRow();
        pdf.doc_add(table);

        p = pdf.print("", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        LineSeparator l = new LineSeparator();
        l.setPercentage(100f);
        p.add(new Chunk(l));
        pdf.doc_add(p);

        // Lista Depósitos
        columnWidths = new float[] {20,20,10,10,15,15,10};
        table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);
        
        font = new com.itextpdf.text.Font(bf, 7, Font.PLAIN);
        for (int c=0; c< jDep.getRowCount(); c++) {
            int modelRow = jDep.convertRowIndexToModel(c);
            if ((Boolean)jDep.getModel().getValueAt(modelRow, 7)) {
                font.setColor(BaseColor.BLACK);
                cell1 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 0).toString(),font));
                cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
                cell1.setBorder(Rectangle.NO_BORDER);
                cell1.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell1);
                
                cell2 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 1).toString(),font));
                cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
                cell2.setBorder(Rectangle.NO_BORDER);
                cell2.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell2);
                
                cell3 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 2).toString(),font));
                cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell3.setBorder(Rectangle.NO_BORDER);
                cell3.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell3);
                
                cell4 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 3).toString(),font));
                cell4.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell4.setBorder(Rectangle.NO_BORDER);
                cell4.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell4);

                cell5 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 4).toString(),font));
                cell5.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell5.setBorder(Rectangle.NO_BORDER);
                cell5.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell5);

                cell6 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 5).toString(),font));
                cell6.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell6.setBorder(Rectangle.NO_BORDER);
                cell6.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell6);

                cell7 = new PdfPCell(new Phrase(jDep.getModel().getValueAt(modelRow, 6).toString(),font));
                cell7.setHorizontalAlignment(Element.ALIGN_LEFT);
                cell7.setBorder(Rectangle.NO_BORDER);
                cell7.setBackgroundColor(BaseColor.WHITE);
                table.addCell(cell7);
            }
        }
        table.completeRow();
        pdf.doc_add(table);
        
        font = new com.itextpdf.text.Font(bf, 7, Font.PLAIN);
        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        
        p = pdf.print("Banco Depositado: " + 
                      jBancosCod.getSelectedItem().toString() + " " +
                      jBancosNome.getSelectedItem().toString(), pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        
        p = pdf.print("", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        
        l = new LineSeparator();
        l.setPercentage(100f);
        p.add(new Chunk(l));
        pdf.doc_add(p);
        
        columnWidths = new float[] {60, 15,25};
        table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);
        font.setColor(BaseColor.BLACK);
        
        if (LerValor.StringToFloat(ValorRec[0][1]) > 0) {
            cell1 = new PdfPCell(new Phrase("Total de Cheques Comuns..........",font));
            cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell1.setBorder(Rectangle.NO_BORDER);
            cell1.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell1);
            cell2 = new PdfPCell(new Phrase("(" + ValorRec[0][1] + ")", font));
            cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell2.setBorder(Rectangle.NO_BORDER);
            cell2.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell2);
            cell3 = new PdfPCell(new Phrase(ValorRec[0][0], font));
            cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell3.setBorder(Rectangle.NO_BORDER);
            cell3.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell3);
        }
        
        if (LerValor.StringToFloat(ValorRec[1][1]) > 0) {
            cell1 = new PdfPCell(new Phrase("Total de Cheques Pre-Datados.....",font));
            cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell1.setBorder(Rectangle.NO_BORDER);
            cell1.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell1);
            cell2 = new PdfPCell(new Phrase("(" + ValorRec[1][1] + ")", font));
            cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell2.setBorder(Rectangle.NO_BORDER);
            cell2.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell2);
            cell3 = new PdfPCell(new Phrase(ValorRec[1][0], font));
            cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell3.setBorder(Rectangle.NO_BORDER);
            cell3.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell3);
        }
        
        if (LerValor.StringToFloat(ValorRec[2][0]) > 0) {
            cell1 = new PdfPCell(new Phrase("Total de Dinheiro.......................",font));
            cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell1.setBorder(Rectangle.NO_BORDER);
            cell1.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell1);
            cell2 = new PdfPCell(new Phrase("", font));
            cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell2.setBorder(Rectangle.NO_BORDER);
            cell2.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell2);
            cell3 = new PdfPCell(new Phrase(ValorRec[2][0], font));
            cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell3.setBorder(Rectangle.NO_BORDER);
            cell3.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell3);
        }
        
        cell1 = new PdfPCell(new Phrase("Total Geral a Depositar.................",font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        cell1.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell1);
        cell2 = new PdfPCell(new Phrase("", font));
        cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell2.setBorder(Rectangle.NO_BORDER);
        cell2.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell2);
        cell3 = new PdfPCell(new Phrase(ValorRec[3][0], font));
        cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell3.setBorder(Rectangle.NO_BORDER);
        cell3.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell3);
        table.completeRow();
        pdf.doc_add(table);

        p = pdf.print("", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        l = new LineSeparator();
        l.setPercentage(100f);
        p.add(new Chunk(l));
        pdf.doc_add(p);

        if (nAut > 0) {
            // Imprimir Autenticação
            p = pdf.print(VariaveisGlobais.dCliente.get("marca").trim() + "DS" +
                    FuncoesGlobais.StrZero(String.valueOf((int)nAut), 7) + "-1" + 
                    Dates.DateFormata("ddMMyyyyHHmmss", new Date()) + 
                    FuncoesGlobais.GravaValores(ValorRec[3][0], 2) + 
                    VariaveisGlobais.usuario, pdf.HELVETICA, 7, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
            pdf.doc_add(p);

            PdfContentByte cb = pdf.writer().getDirectContent();
            BarcodeInter25 code25 = new BarcodeInter25();
            String barra = FuncoesGlobais.StrZero(String.valueOf((int)nAut),16);
            code25.setCode(barra);
            code25.setChecksumText(true);
            code25.setFont(null);
            com.itextpdf.text.Image cdbar = code25.createImageWithBarcode(cb, null, null);
            cdbar.setAlignment(Element.ALIGN_CENTER);
            pdf.doc_add(cdbar);            
        }

        // Pula linhas (6) / corta papel
        for (int k=1;k<=6;k++) { 
            p = pdf.print("\n", pdf.HELVETICA, 6, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
            pdf.doc_add(p);
        }
        
        pdf.close();
        //pdf.print();
        new toPrint(pathName + docName, "THERMICA",VariaveisGlobais.Deposito);
        pdf.setPathName("");
        pdf.setDocName("");
   }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jBancosCod;
    private javax.swing.JComboBox jBancosNome;
    private javax.swing.JTable jDep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jNCH;
    private javax.swing.JTextField jNCP;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jSelAllChCM;
    private javax.swing.JFormattedTextField jTotDepositar;
    private javax.swing.JFormattedTextField jVRCH;
    private javax.swing.JFormattedTextField jVRCP;
    private javax.swing.JFormattedTextField jVRDN;
    private javax.swing.JButton jbtDepositar;
    // End of variables declaration//GEN-END:variables
}