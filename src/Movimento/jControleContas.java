package Movimento;

import Funcoes.*;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.regex.PatternSyntaxException;
import javax.swing.DefaultListModel;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class jControleContas extends javax.swing.JInternalFrame {
    Db conn = VariaveisGlobais.conexao;
    jTableControl tabela2 = new jTableControl(true);
    TableRowSorter<TableModel> sorter;
    
    /** Creates new form jControleCheques */
    public jControleContas() {
        initComponents();

        // Icone da tela
        FlatSVGIcon icone = new FlatSVGIcon("menuIcons/controleContas.svg",16,16);
        setFrameIcon(icone);        
        
        FillCombos();
        AutoCompletion.enable(jcbxContas);
        
        FillCaixas();
    }

    private void FillCaixas() {
        String sql = "SELECT DISTINCT cx_logado FROM caixa ORDER BY Lower(cx_logado);";
        ResultSet rst = conn.OpenTable(sql, null);
        lcaixas.removeAll();
        
        DefaultListModel lm = new DefaultListModel();
        try {
            while (rst.next()) {
                lm.addElement(rst.getString("cx_logado"));
            }
        } catch (SQLException ex) {}
        lcaixas.setModel(lm);
        conn.CloseTable(rst);
    }
    
    @SuppressWarnings("CallToThreadDumpStack")
    private void FillCombos() {
        String sSql = "SELECT DISTINCT conta FROM auxiliar;";
        ResultSet imResult = conn.OpenTable(sSql, null);

        jcbxContas.removeAllItems();
        try {
            while (imResult.next()) {
                jcbxContas.addItem(imResult.getString("conta"));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        conn.CloseTable(imResult);
    }
    
    private void FillContas(String dtini, String dtfim, String tp) throws SQLException {
        String sql = "SELECT dtrecebimento, StrVal(Replace(Mid(campo,7,10),'-','0'))  * IF(INSTR(Mid(campo,7,10),'-'),-1,1) AS ValorDep, rc_aut, campo, contrato FROM auxiliar " +
                     "WHERE conta = '" + jcbxContas.getSelectedItem().toString().trim().toUpperCase() +
                     "' and (dtrecebimento >= '" +
                     dtini + "' AND dtrecebimento <= '" + dtfim + "')";

        ResultSet rs = conn.OpenTable(sql, null);
        Integer[] tam = {80,80,30,30,30,80};
        String[] col = {"Dt.Dep","Valor","Tipo","Conta","No.Aut.", "Caixa"};
        Boolean[] edt = {false,false,false,false,false,false};
        String[] aln = {"C","R","C","C","C","L"};
        Object[][] data = {};
        while (rs.next()) {
            String dDtLanc = Dates.DateFormata("dd/MM/yyyy", rs.getDate("dtrecebimento"));
            String dValor = LerValor.floatToCurrency(rs.getFloat("ValorDep"),2);
            String dCheque = rs.getString("rc_aut");
            String dTipo;
            String dConta = rs.getString("contrato");
            String dCaixa;
            
            String tipo = rs.getString("campo");
            if (tipo.indexOf("CRE") > -1) { 
                dTipo = "CRE";
            } else if (tipo.indexOf("DEB") > -1) { 
                dTipo = "DEB";
            } else {
                dTipo = "";
            }
            
            if (jcbxContas.getSelectedItem().toString().trim().toUpperCase().equalsIgnoreCase("ADM") || jcbxContas.getSelectedItem().toString().trim().toUpperCase().equalsIgnoreCase("REC")) {
                dCaixa = "";
            } else {
                String[] aCaixa = tipo.split(":");
                dCaixa = aCaixa[aCaixa.length - 1];
            }
            
            if (tp.equalsIgnoreCase("ALL")) {
                Object[] dado = {dDtLanc, dValor, dTipo, dConta, dCheque, dCaixa};
                data = tabela2.insert(data, dado);
            } else if (tp.equalsIgnoreCase(dTipo)) {
                Object[] dado = {dDtLanc, dValor, dTipo, dConta, dCheque, dCaixa};
                data = tabela2.insert(data, dado);
            }
        }
        conn.CloseTable(rs);
        tabela2.Show(jADep, data, tam, aln, col, edt);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDtInic = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel2 = new javax.swing.JLabel();
        jDtFim = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jbtListar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jADep = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jcbxContas = new javax.swing.JComboBox();
        jrbCred = new javax.swing.JRadioButton();
        jrbCrDb = new javax.swing.JRadioButton();
        jrbDeb = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jtxBusca = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jCaixas = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        lcaixas = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtdn = new javax.swing.JFormattedTextField();
        jtch = new javax.swing.JFormattedTextField();
        jtcp = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Controle de Contas ::.");
        setVisible(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "[ CONTAS ]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 3, 12))); // NOI18N

        jLabel1.setText("Período:");

        jLabel2.setText("até");

        jbtListar.setText("Listar");
        jbtListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtListarActionPerformed(evt);
            }
        });

        jADep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jADep);

        jLabel3.setText("Conta:");

        buttonGroup1.add(jrbCred);
        jrbCred.setText("Crédito");

        buttonGroup1.add(jrbCrDb);
        jrbCrDb.setSelected(true);
        jrbCrDb.setText("Todos");

        buttonGroup1.add(jrbDeb);
        jrbDeb.setText("Débito");

        jLabel4.setText("Filtro:");

        jtxBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxBuscaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbxContas, 0, 158, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbCred)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbDeb)
                                .addGap(4, 4, 4)
                                .addComponent(jrbCrDb)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(7, 7, 7)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jDtInic, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtListar))
                            .addComponent(jtxBusca))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtListar)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jDtFim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jcbxContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jDtInic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbCrDb)
                    .addComponent(jrbDeb)
                    .addComponent(jLabel4)
                    .addComponent(jtxBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrbCred))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCaixas.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Fechamentos"));
        jCaixas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCaixasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jCaixas);

        lcaixas.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Caixas"));
        lcaixas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lcaixas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lcaixasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lcaixas);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "RESULTADO FINAL"));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("T Din:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("T Chq:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("T Pré:");

        jtdn.setEditable(false);
        jtdn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtdn.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtdn.setText("0,00");

        jtch.setEditable(false);
        jtch.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtch.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtch.setText("0,00");

        jtcp.setEditable(false);
        jtcp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtcp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtcp.setText("0,00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtdn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtch, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtcp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jtch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtcp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtListarActionPerformed
        String dini = Dates.DateFormata("yyyy-MM-dd", jDtInic.getDate());
        String dfim = Dates.DateFormata("yyyy-MM-dd", jDtFim.getDate());
        String stp = (jrbCred.isSelected() ? "CRE" : (jrbDeb.isSelected() ? "DEB" : "ALL"));
        
        try { FillContas(dini, dfim, stp); } catch (Exception e) {}

        sorter = new TableRowSorter<TableModel>(jADep.getModel());
        jADep.setRowSorter(sorter);
    }//GEN-LAST:event_jbtListarActionPerformed

    private void jtxBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxBuscaKeyReleased
        if ("".equals(jtxBusca.getText().trim())) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter(jtxBusca.getText().trim()));
            } catch (PatternSyntaxException pse) {
                   System.err.println("Bad regex pattern");
            }
        }
    }//GEN-LAST:event_jtxBuscaKeyReleased

    private void lcaixasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lcaixasMouseClicked
        int row = lcaixas.getSelectedIndex();
        if (row >= 0) {
            ListaCaixas(lcaixas.getModel().getElementAt(row).toString());
            ShowValues(lcaixas.getModel().getElementAt(row).toString(), new Date());
        }
    }//GEN-LAST:event_lcaixasMouseClicked

    private void jCaixasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCaixasMouseClicked
        int row = lcaixas.getSelectedIndex();
        int low = jCaixas.getSelectedIndex();

        if (low >=0) {
            ShowValues(lcaixas.getModel().getElementAt(row).toString(), Dates.StringtoDate(jCaixas.getModel().getElementAt(low).toString(),"dd-MM-yyyy"));
        }
    }//GEN-LAST:event_jCaixasMouseClicked

    private void ListaCaixas(String logado) {
        String sSql = "SELECT cx_data FROM caixa where lower(cx_logado) = '" + logado.trim().toLowerCase() + "' AND cx_aut > 0 group by cx_data;";
        ResultSet rs = conn.OpenTable(sSql, null);
        jCaixas.removeAll();

        DefaultListModel lm = new DefaultListModel();
        try {
            while (rs.next()) {
                lm.addElement(Dates.DateFormata("dd/MM/yyyy", rs.getDate("cx_data")));
            }
        } catch (SQLException ex) {}
        jCaixas.setModel(lm);
    }
    
    private void ShowValues(String logado, Date dData) {
        float[][] m_Totais = Totaliza(logado, Dates.DateFormata("yyyy-MM-dd", dData));

        float tt_etd_dn = m_Totais[4][0] + m_Totais[0][0] + m_Totais[6][0] + m_Totais[7][0];
        float tt_etd_ch = m_Totais[4][1] + m_Totais[0][1] + m_Totais[6][1] + m_Totais[7][1];
        float tt_etd_cp = m_Totais[4][2] + m_Totais[0][2] + m_Totais[6][2] + m_Totais[7][2];

        float tt_eta_dn = m_Totais[5][0] + m_Totais[3][0] + m_Totais[2][0] + m_Totais[1][0] + m_Totais[8][0];
        float tt_eta_ch = m_Totais[3][1] + m_Totais[8][1];
        float tt_eta_cp = m_Totais[5][2] + m_Totais[3][2] + m_Totais[2][2] + m_Totais[1][2] + m_Totais[8][2];

        //"RESULTADO FINAL" + javaPOS.GS_EXC(0),1);

        //"TOTAL DINHEIRO"
        jtdn.setText(LerValor.floatToCurrency(tt_etd_dn - tt_eta_dn,2));

        //"TOTAL CHEQUE"
        jtch.setText(LerValor.floatToCurrency(tt_etd_ch - tt_eta_ch,2));

        //"TOTAL PRE-DATADO"
        jtcp.setText(LerValor.floatToCurrency(tt_etd_cp - tt_eta_cp,2));
        
    }
    
    private float[][] Totaliza(String logado, String dDataCaixa) {
        ResultSet myRst;
        String sSql;
        float tt_recibo_dn, tt_recibo_ch, tt_recibo_cp;
        float tt_extrato_dn, tt_extrato_ch, tt_extrato_cp;
        float tt_despesa_dn, tt_despesa_ch, tt_despesa_cp;
        float tt_deposito_dn, tt_deposito_ch, tt_deposito_cp;
        float tt_avcred_dn, tt_avcred_ch, tt_avcred_cp;
        float tt_avdeb_dn, tt_avdeb_ch, tt_avdeb_cp;
        float tt_caixa_dn, tt_caixa_ch, tt_caixa_cp;
        float tt_pass_dn, tt_pass_ch, tt_pass_cp;
        float tt_passd_dn, tt_passd_ch, tt_passd_cp;

        //'* RECIBOS
        tt_recibo_dn = 0;
        tt_recibo_ch = 0;
        tt_recibo_cp = 0;

        // RECIBO DINHEIRO
        sSql = "select IF(isnull(cx_vrdn),0,cx_vrdn) as valor1 ,IF(IsNull(cx_vrch),0,cx_vrch) as valor2, " +
            "IF(IsNull(cx_vrdn),0,cx_vrdn) + IF(IsNull(cx_vrch),0,cx_vrch) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
            " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_recibo_dn = tt_recibo_dn + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        // RECIBO CHEQUE/DINHEIRO
        sSql = "select IF(IsNull(cx_vrdn),0,cx_vrdn) as valor1,IF(IsNull(cx_vrch),0,cx_vrch) as valor2, " +
                "IF(IsNull(cx_vrdn),0,cx_vrdn) + IF(IsNull(cx_vrch),0,cx_vrch) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_recibo_dn = tt_recibo_dn + myRst.getFloat("valor1");
                tt_recibo_ch = tt_recibo_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* RECIBO/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_recibo_ch = tt_recibo_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* RECIBO/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_recibo_cp = tt_recibo_cp + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* EXTRATOS
        tt_extrato_dn = 0;
        tt_extrato_ch = 0;
        tt_extrato_cp = 0;

        //* EXTRATO/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_extrato_dn = myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* EXTRATO CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_extrato_dn = tt_extrato_dn + myRst.getFloat("valor1");
                tt_extrato_ch = myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* EXTRATO/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_extrato_ch = tt_extrato_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* EXTRATO/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_extrato_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DESPESAS
        tt_despesa_dn = 0;
        tt_despesa_ch = 0;
        tt_despesa_cp = 0;

        //* DESPESA/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_despesa_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DESPESA CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_despesa_dn = tt_despesa_dn + myRst.getFloat("valor1");
                tt_despesa_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DESPESA/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_despesa_ch = tt_despesa_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DESPESA/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_despesa_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DEPOSITOS
        tt_deposito_dn = 0;
        tt_deposito_ch = 0;
        tt_deposito_cp = 0;

        //* DEPOSITO/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_deposito_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DEPOSITO CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_deposito_dn = tt_deposito_dn + myRst.getFloat("valor1");
                tt_deposito_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DEPOSITO/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_deposito_ch = tt_deposito_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* DEPOSITO/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_deposito_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* AVISOS CREDITOS
        tt_avcred_dn = 0;
        tt_avcred_ch = 0;
        tt_avcred_cp = 0;

        //* AVCRED/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avcred_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* AVCRED CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avcred_dn = tt_avcred_dn + myRst.getFloat("valor1");
                tt_avcred_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* AVCRED/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avcred_ch = tt_avcred_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* AVCRED/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avcred_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* AVISOS DEBITOS
        tt_avdeb_dn = 0;
        tt_avdeb_ch = 0;
        tt_avdeb_cp = 0;

        //* avdeb/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avdeb_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* avdeb CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avdeb_dn = tt_avdeb_dn + myRst.getFloat("valor1");
                tt_avdeb_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* avdeb/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avdeb_ch = tt_avdeb_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* avdeb/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_avdeb_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* CAIXA ANTERIOR
        tt_caixa_dn = 0;
        tt_caixa_ch = 0;
        tt_caixa_cp = 0;

        //* CAIXA/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_caixa_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* CAIXA CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_caixa_dn = tt_caixa_dn + myRst.getFloat("valor1");
                tt_caixa_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* caixa/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_caixa_ch = tt_caixa_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* caixa/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_caixa_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* PASSAGEM DE CAIXA
        tt_pass_dn = 0;
        tt_pass_ch = 0;
        tt_pass_cp = 0;

        //* PASS/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_pass_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* PASS CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_pass_dn = tt_pass_dn + myRst.getFloat("valor1");
                tt_pass_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* pass/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_pass_ch = tt_pass_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* pass/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_pass_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* PASSAGEM DE CAIXA DEB
        tt_passd_dn = 0;
        tt_passd_ch = 0;
        tt_passd_cp = 0;

        //* PASS/DINHEIRO DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() +
                "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_passd_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* PASS CHEQUE/DINHEIRO DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() +
                "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_passd_dn = tt_passd_dn + myRst.getFloat("valor1");
                tt_passd_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* pass/CHEQUE DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() +
                "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_passd_ch = tt_passd_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        //* pass/CHEQUE-PRE DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                logado.toLowerCase() +
                "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.OpenTable(sSql, null);
        try {
            while (myRst.next()) {
                tt_passd_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        conn.CloseTable(myRst);

        return new float[][] {{tt_recibo_dn, tt_recibo_ch, tt_recibo_cp},
            {tt_extrato_dn, tt_extrato_ch, tt_extrato_cp},
            {tt_despesa_dn, tt_despesa_ch, tt_despesa_cp},
            {tt_deposito_dn, tt_deposito_ch, tt_deposito_cp},
            {tt_avcred_dn, tt_avcred_ch, tt_avcred_cp},
            {tt_avdeb_dn, tt_avdeb_ch, tt_avdeb_cp},
            {tt_caixa_dn, tt_caixa_ch, tt_caixa_cp},
            {tt_pass_dn, tt_pass_ch, tt_pass_cp},
            {tt_passd_dn, tt_passd_ch, tt_passd_cp}};
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable jADep;
    private javax.swing.JList jCaixas;
    private com.toedter.calendar.JDateChooser jDtFim;
    private com.toedter.calendar.JDateChooser jDtInic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbtListar;
    private javax.swing.JComboBox jcbxContas;
    private javax.swing.JRadioButton jrbCrDb;
    private javax.swing.JRadioButton jrbCred;
    private javax.swing.JRadioButton jrbDeb;
    private javax.swing.JFormattedTextField jtch;
    private javax.swing.JFormattedTextField jtcp;
    private javax.swing.JFormattedTextField jtdn;
    private javax.swing.JTextField jtxBusca;
    private javax.swing.JList lcaixas;
    // End of variables declaration//GEN-END:variables
}
