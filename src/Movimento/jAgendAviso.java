package Movimento;

import Funcoes.AutoCompletion;
import Funcoes.Dates;
import Funcoes.Db;
import Funcoes.VariaveisGlobais;
import Funcoes.LerValor;
import Funcoes.NamedPreparedStatement;
import Funcoes.jTableControl;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.regex.PatternSyntaxException;
import javax.swing.RowFilter;
import javax.swing.SwingWorker;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class jAgendAviso extends javax.swing.JInternalFrame {

    Db conn = VariaveisGlobais.conexao;
    String rgprp = "";
    jTableControl tabela = new jTableControl(true);
    boolean bExecNome = false, bExecCodigo = false;
    TableRowSorter<TableModel> sorter;

    public jAgendAviso() {
        initComponents();

        // Icone da tela
        FlatSVGIcon icone = new FlatSVGIcon("menuIcons/avisos.svg", 16, 16);
        setFrameIcon(icone);

        FillCombos();
        AutoCompletion.enable(jRgprp);
        AutoCompletion.enable(jNomeProp);

        loadTableInBackground();
    }

    private void FillCombos() {
        String sSql = "SELECT distinct p.rgprp, p.nome FROM proprietarios p WHERE Upper(p.status) = 'ATIVO' ORDER BY p.rgprp;";
        ResultSet imResult = this.conn.OpenTable(sSql, null);

        jRgprp.removeAllItems();
        jNomeProp.removeAllItems();
        try {
            while (imResult.next()) {
                jRgprp.addItem(String.valueOf(imResult.getInt("rgprp")));
                jNomeProp.addItem(imResult.getString("nome"));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        conn.CloseTable(imResult);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jNomeProp = new javax.swing.JComboBox();
        jRgprp = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtDisp = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jValor = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jbtTipo = new javax.swing.JToggleButton();
        btnLancar = new javax.swing.JButton();
        mDtNascRep = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtabela = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        buscar = new javax.swing.JTextField();
        progresso = new javax.swing.JProgressBar();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Agendamento de Aviso ao Proprietário.");
        setMaximumSize(new java.awt.Dimension(484, 479));
        setMinimumSize(new java.awt.Dimension(484, 479));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jNomeProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNomePropActionPerformed(evt);
            }
        });

        jRgprp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRgprpActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Rgprp:");

        jtxtDisp.setColumns(20);
        jtxtDisp.setLineWrap(true);
        jtxtDisp.setRows(5);
        jtxtDisp.setWrapStyleWord(true);
        jtxtDisp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Especificação do Aviso", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jScrollPane1.setViewportView(jtxtDisp);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRgprp, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeProp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jRgprp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeProp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jValor.setForeground(new java.awt.Color(51, 102, 0));
        jValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValor.setText("0,00");
        jValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jValorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jValorFocusLost(evt);
            }
        });

        jLabel5.setText("Valor:");

        jbtTipo.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jbtTipo.setForeground(new java.awt.Color(0, 153, 0));
        jbtTipo.setText("CRÉDITO");
        jbtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTipoActionPerformed(evt);
            }
        });

        btnLancar.setText("Lançar");
        btnLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLancarActionPerformed(evt);
            }
        });

        mDtNascRep.setDate(new java.util.Date(-2208977612000L));

        jLabel2.setText("Data:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mDtNascRep, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jValor, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLancar)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jValor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(mDtNascRep, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jbtTipo)
                    .addComponent(btnLancar)))
        );

        jtabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtabela.setColumnSelectionAllowed(true);
        jtabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtabela);
        jtabela.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel3.setBackground(java.awt.SystemColor.activeCaption);
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("<html>Avisos Agendados...         <font color=red size=1>(Use [Del] para excluir um lançamento.)</font>");
        jLabel3.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.setMaximumSize(new java.awt.Dimension(128, 25));
        jPanel1.setMinimumSize(new java.awt.Dimension(128, 25));

        jLabel4.setText("Buscar:");

        buscar.setBorder(null);
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscar))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        progresso.setValue(50);
        progresso.setPreferredSize(new java.awt.Dimension(460, 4));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel3)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progresso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(progresso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jNomePropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNomePropActionPerformed
        if (!bExecCodigo) {
            int pos = jNomeProp.getSelectedIndex();
            if (jRgprp.getItemCount() > 0) {
                bExecNome = true;
                jRgprp.setSelectedIndex(pos);
                bExecNome = false;
            }
        }
    }//GEN-LAST:event_jNomePropActionPerformed

    private void jRgprpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRgprpActionPerformed
        if (!bExecNome) {
            int pos = jRgprp.getSelectedIndex();
            if (jNomeProp.getItemCount() > 0) {
                bExecCodigo = true;
                jNomeProp.setSelectedIndex(pos);
                bExecCodigo = false;
            }
        }
    }//GEN-LAST:event_jRgprpActionPerformed

    private void jValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jValorFocusGained
        btnLancar.setEnabled(false);

        jValor.selectAll();
    }//GEN-LAST:event_jValorFocusGained

    private void jValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jValorFocusLost
        float iValor = LerValor.StringToFloat(jValor.getText());

        rgprp = jRgprp.getSelectedItem().toString().trim();

        if (LerValor.StringToFloat(jValor.getText()) > 0) {
            jRgprp.setEnabled(false);
            jNomeProp.setEnabled(false);
            jValor.setEnabled(true);

            jbtTipo.setEnabled(true);
            jValor.setEnabled(true);
        } else {
            jRgprp.setEnabled(true);
            jNomeProp.setEnabled(true);
            jbtTipo.setEnabled(true);

            jValor.setText("0,00");
            jValor.setEnabled(true);

            jRgprp.requestFocus();
        }
        btnLancar.setEnabled(true);
    }//GEN-LAST:event_jValorFocusLost

    private void jbtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTipoActionPerformed
        if (jbtTipo.isSelected()) {
            jbtTipo.setForeground(new java.awt.Color(204, 51, 0));
            jbtTipo.setText("DÉBITO");
        } else {
            jbtTipo.setForeground(new java.awt.Color(0, 153, 0));
            jbtTipo.setText("CRÉDITO");
        }
    }//GEN-LAST:event_jbtTipoActionPerformed

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
        if (buscar.getText().trim().isEmpty()) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter(buscar.getText().trim()));
            } catch (PatternSyntaxException pse) {
                System.err.println("Bad regex pattern");
            }
        }
    }//GEN-LAST:event_buscarKeyReleased

    private void btnLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLancarActionPerformed
        String query = "INSERT INTO (`rgprp`, `descricao`, `tipo`, `data`, `valor`) VALUES (:rgprp, :descricao, :tipo, :data, :valor)";
        Object[][] param = {
            {"string", "rgprp", jRgprp.getSelectedItem().toString()},
            {"string", "descricao", jtxtDisp.getText().trim()},
            {"string", "tipo", (jbtTipo.isSelected() ? "DEB" : "CRE")},
            {"date", "data", Dates.toSqlDate(mDtNascRep.getDate())},
            {"decimal", "valor", new BigDecimal(LerValor.StringToFloat(jValor.getText()))}
        };

        int podeAdc = -1;
        NamedPreparedStatement stm = conn.CommandStatment(query, param);
        try {
            int rowaffect = stm.executeUpdate();
            if (rowaffect > 0) {
                ResultSet generatedKeys = stm.getGeneratedKeys();
                if (generatedKeys.next()) {
                    podeAdc = generatedKeys.getInt(1);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        podeAdc = -1;

        if (podeAdc > -1) {
            int did = podeAdc;
            String drgprp = jRgprp.getSelectedItem().toString();
            String dnome = "Novo";
            String ddescricao = jtxtDisp.getText().trim();
            String dtipo = (jbtTipo.isSelected() ? "DEB" : "CRE");
            Date ddata = mDtNascRep.getDate();
            BigDecimal dvalor = new BigDecimal(jValor.getText());

            Object[] dado = {did, drgprp, dnome, ddescricao, dtipo, ddata, dvalor};
            //data = tabela.insert(data, dado);
            tabela.Add(dado);
            tabela.Repaint();
        }

    }//GEN-LAST:event_btnLancarActionPerformed

    private void loadTableInBackground() {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                String sql = "SELECT ag.`id`, ag.`rgprp`, pr.`nome`, ag.`descricao`, ag.`tipo`, ag.`data`, ag.`valor` " +
                             "FROM `avisosagenda` ag " +
                             "INNER JOIN `proprietarios` pr ON CAST(ag.`rgprp` AS UNSIGNED) = pr.`rgprp`;";

                ResultSet rs = conn.OpenTable(sql, null);
                Integer[] tam = {0,90,240,110,40,80,90};
                String[] col = {"id","rgprp","proprietário","descrição","tipo","data","valor"};
                Boolean[] edt = {false,false,false,false,false,false,false};
                String[] aln = {"C","C","L","L","C","C","R"};
                Object[][] data = {};
                
                int totReg = conn.RecordCount(rs); int b = 0;
                progresso.setMinimum(0);
                progresso.setMaximum(totReg);
                progresso.setValue(0);
                try {
                    while (rs.next()) {
                        int did = rs.getInt("id");
                        String drgprp = rs.getString("rgprp");
                        String dnome = rs.getString("nome");
                        String ddescricao = rs.getString("descricao");
                        String dtipo = rs.getString("tipo");
                        Date ddata = rs.getDate("data");
                        BigDecimal dvalor = rs.getBigDecimal("valor");

                        Object[] dado = {did, drgprp, dnome, ddescricao, dtipo, ddata, dvalor};
                        data = tabela.insert(data, dado);
                        
                        Thread.sleep(100);
                        progresso.setValue((b++ * 100) / totReg);
                    }
                } catch (SQLException ex) {ex.printStackTrace();}

                conn.CloseTable(rs);
                tabela.Show(jtabela, data, tam, aln, col, edt);
                
                return null;
            }

            @Override
            protected void done() {
                sorter = new TableRowSorter<TableModel>(jtabela.getModel());
                jtabela.setRowSorter(sorter);
            }
        };

        // Executa a tarefa SwingWorker em uma nova thread
        worker.execute();
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLancar;
    private javax.swing.JTextField buscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox jNomeProp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JComboBox jRgprp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField jValor;
    private javax.swing.JToggleButton jbtTipo;
    private javax.swing.JTable jtabela;
    private javax.swing.JTextArea jtxtDisp;
    private com.toedter.calendar.JDateChooser mDtNascRep;
    private javax.swing.JProgressBar progresso;
    // End of variables declaration//GEN-END:variables
}
