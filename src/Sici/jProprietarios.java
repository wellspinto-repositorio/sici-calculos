package Sici;

import Funcoes.CamposScreen;
import Funcoes.Db;
import static Funcoes.Db.isDbConnected;
import Funcoes.FuncoesGlobais;
import Funcoes.LimitedTextField;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import Sici.Locatarios.BuscaCep;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;

public class jProprietarios extends javax.swing.JInternalFrame {
    Db conn = VariaveisGlobais.conexao;
    private boolean bNew = false;
    private String _botoes = null;

    // Botoes que acompanham a tela
    private boolean _Incluir = true;
    private boolean _Alterar = true;
    private boolean _Excluir = true;
    private boolean _Imoveis = true;
    
    public void setBotoes(String _botoes) {
        this._botoes = _botoes;
    }
        
    /** Creates new form jNewProprietarios */
    public jProprietarios() throws SQLException {
        initComponents();
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                if (_botoes != null) {
                    String[] btn = _botoes.split(" ");
                    int Pos = FuncoesGlobais.IndexOf(btn, "inclusao");
                    if (Pos > -1) {
                        String[] _btn = btn[Pos].split("=");
                        _Incluir = new Boolean(_btn[1].replace("\"", ""));
                    }

                    Pos = FuncoesGlobais.IndexOf(btn, "alteracao");
                    if (Pos > -1) {
                        String[] _btn = btn[Pos].split("=");
                        _Alterar = new Boolean(_btn[1].replace("\"", ""));
                    }

                    Pos = FuncoesGlobais.IndexOf(btn, "exclusao");
                    if (Pos > -1) {
                        String[] _btn = btn[Pos].split("=");
                        _Excluir = new Boolean(_btn[1].replace("\"", ""));
                    }

                    Pos = FuncoesGlobais.IndexOf(btn, "imoveis");
                    if (Pos > -1) {
                        String[] _btn = btn[Pos].split("=");
                        _Imoveis = new Boolean(_btn[1].replace("\"", ""));
                    }
                }
                
                btIncluir.setEnabled(_Incluir);
                btExcluir.setEnabled(_Excluir);
                btImoveis.setEnabled(_Imoveis);
                btGravar.setEnabled(_Alterar);
            }
        });        
        
        // Icone da tela
        ImageIcon icone = new FlatSVGIcon("menuIcons/proprietario.svg",16,16);
        setFrameIcon(icone);

        initComponents();
        LerDados(null);

        // Colocando enter para pular de campo
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);

        mTipoDoc.setEditable(false); mTipoDoc.setEnabled(false);
        mCpfCnpj.setEnabled(false);
        
        new CamposScreen(mCpfCnpj,"CPF");
        
        mNome.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        mCodigo = new javax.swing.JFormattedTextField();
        mTipoDoc = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        mNome = new LimitedTextField(60);
        mEndereco = new LimitedTextField(60);
        jLabel4 = new javax.swing.JLabel();
        mNumero = new LimitedTextField(10);
        jLabel5 = new javax.swing.JLabel();
        mCplto = new LimitedTextField(15);
        mBairro = new LimitedTextField(25);
        jLabel7 = new javax.swing.JLabel();
        mCidade = new LimitedTextField(25);
        jLabel8 = new javax.swing.JLabel();
        mEstado = new LimitedTextField(2);
        jLabel9 = new javax.swing.JLabel();
        mCep = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        mProfissao = new LimitedTextField(25);
        mRepresentante = new LimitedTextField(60);
        jLabel13 = new javax.swing.JLabel();
        mDtNascRep = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        mNacionalidade = new LimitedTextField(25);
        jLabel15 = new javax.swing.JLabel();
        mEstCivil = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        mDtNasc = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        mConjugue = new LimitedTextField(60);
        jLabel22 = new javax.swing.JLabel();
        mDtNascConj = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        mBanco = new LimitedTextField(20);
        jLabel23 = new javax.swing.JLabel();
        mAgencia = new LimitedTextField(15);
        jLabel26 = new javax.swing.JLabel();
        mCCorrente = new LimitedTextField(20);
        mFavorecido = new LimitedTextField(100);
        mEmail = new LimitedTextField(100);
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        btIncluir = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btGravar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btTras = new javax.swing.JButton();
        btFrente = new javax.swing.JButton();
        btIrPara = new javax.swing.JButton();
        btImoveis = new javax.swing.JButton();
        jbtBuscaCep = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        mSexo = new javax.swing.JComboBox();
        mTelefone = new javax.swing.JComboBox();
        plus = new javax.swing.JLabel();
        minus = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbvImoveis = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        mDtEntrada = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel28 = new javax.swing.JLabel();
        mDtSaida = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel29 = new javax.swing.JLabel();
        mStatus = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        mMSgBoleta = new LimitedTextField(60);
        jLabel31 = new javax.swing.JLabel();
        mMsgRecibo = new LimitedTextField(60);
        jLabel32 = new javax.swing.JLabel();
        mObsCaixa = new LimitedTextField(60);
        jLabel33 = new javax.swing.JLabel();
        mCpfCnpj = new javax.swing.JTextField();
        mIdentidade = new LimitedTextField(20);
        jLabel17 = new javax.swing.JLabel();
        lbCpfCnpj = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Cadastro de Proprietários");
        setMaximumSize(new java.awt.Dimension(920, 519));
        setMinimumSize(new java.awt.Dimension(920, 519));
        setNormalBounds(null);
        setVisible(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Código:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Endereço:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Bairro:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Telefone:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Representante:");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Nacionalidade:");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Conjugue:");

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Banco:");

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Favorecido:");

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("E-Mail:");

        mCodigo.setEditable(false);
        mCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mCodigo.setToolTipText("Código do Proprietário...");
        mCodigo.setName("mRgprp"); // NOI18N
        mCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mCodigoFocusLost(evt);
            }
        });

        mTipoDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "F", "J" }));
        mTipoDoc.setEnabled(false);
        mTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTipoDocActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        mNome.setName("mNome"); // NOI18N
        mNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mNomeFocusLost(evt);
            }
        });

        mEndereco.setName("mEndereco"); // NOI18N

        jLabel4.setText("N°.:");

        mNumero.setName("mNumero"); // NOI18N

        jLabel5.setText("Cplto:");

        mCplto.setName("mCplto"); // NOI18N

        mBairro.setName("mBairro"); // NOI18N

        jLabel7.setText("Cidade:");

        mCidade.setName("mCidade"); // NOI18N

        jLabel8.setText("UF:");

        mEstado.setName("mEstado"); // NOI18N

        jLabel9.setText("Cep:");

        try {
            mCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Profissão:");

        mProfissao.setName("mProfissao"); // NOI18N

        jLabel13.setText("Dt.Nasc.:");

        mDtNascRep.setDate(new java.util.Date(-2208977612000L));

        mNacionalidade.setName("mNacionalidade"); // NOI18N

        jLabel15.setText("E.Civil:");

        mEstCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Solteriro(a)", "Casado(a)", "Separado(a)", "Divorciado(a)", "Viuvo(a)" }));
        mEstCivil.setName("mEstCivil"); // NOI18N

        jLabel16.setText("Dt.Nasc.:");

        mDtNasc.setDate(new java.util.Date(-2208977612000L));

        mConjugue.setName("mConjugue"); // NOI18N

        jLabel22.setText("Dt.Nasc.:");

        mDtNascConj.setDate(new java.util.Date(-2208977612000L));

        mBanco.setName("mBanco"); // NOI18N

        jLabel23.setText("Agência:");

        mAgencia.setName("mAgencia"); // NOI18N

        jLabel26.setText("C/C:");

        mCCorrente.setName("mCCorrente"); // NOI18N

        mFavorecido.setName("mFavorecido"); // NOI18N

        mEmail.setName("mEmail"); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(138, 137, 149), null, null));

        btIncluir.setText("Incluir");
        btIncluir.setName("btIncluir"); // NOI18N
        btIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.setName("btExcluir"); // NOI18N
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btGravar.setText("Gravar");
        btGravar.setName("btGravar"); // NOI18N
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.setName("btSair"); // NOI18N
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btTras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/previous.png"))); // NOI18N
        btTras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTrasActionPerformed(evt);
            }
        });

        btFrente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/next.png"))); // NOI18N
        btFrente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFrenteActionPerformed(evt);
            }
        });

        btIrPara.setText("Ir Para");
        btIrPara.setName("btIrPara"); // NOI18N
        btIrPara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIrParaActionPerformed(evt);
            }
        });

        btImoveis.setText("Imóveis");
        btImoveis.setName("btImoveis"); // NOI18N
        btImoveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImoveisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btIrPara, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btTras, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btFrente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btImoveis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btFrente, btTras});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btTras, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFrente, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btIrPara, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btImoveis, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btExcluir, btFrente, btGravar, btImoveis, btIncluir, btIrPara, btSair, btTras});

        jbtBuscaCep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/find.png"))); // NOI18N
        jbtBuscaCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscaCepActionPerformed(evt);
            }
        });

        jLabel40.setText("Sexo:");

        mSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));

        plus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        plus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        plus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/plus.png"))); // NOI18N
        plus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        plus.setPreferredSize(new java.awt.Dimension(10, 10));
        plus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                plusMouseReleased(evt);
            }
        });

        minus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        minus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/minus.png"))); // NOI18N
        minus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        minus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                minusMouseReleased(evt);
            }
        });

        tbvImoveis.setAutoCreateRowSorter(true);
        tbvImoveis.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 48, 255)));
        tbvImoveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbvImoveis.setDoubleBuffered(true);
        tbvImoveis.setName("tbvImoveis"); // NOI18N
        tbvImoveis.setSelectionBackground(new java.awt.Color(244, 255, 0));
        tbvImoveis.setSelectionForeground(new java.awt.Color(255, 0, 0));
        tbvImoveis.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tbvImoveis);

        jTabbedPane2.addTab("Imóveis", jScrollPane1);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(174, 182, 253), new java.awt.Color(179, 179, 179), null));
        jPanel4.setOpaque(false);

        jLabel27.setText("Dt.Saida:");

        mDtEntrada.setDate(new java.util.Date(-2208977612000L));

        jLabel28.setText("Status:");

        mDtSaida.setDate(new java.util.Date(-2208977612000L));

        jLabel29.setText("Dt.Entrada:");

        mStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Msg Boleta:");

        mMSgBoleta.setName("mMsgBoleta"); // NOI18N

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Msg Recibo:");

        mMsgRecibo.setName("mMsgRecibo"); // NOI18N

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Obs Caixa:");

        mObsCaixa.setName("mObsCaixa"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mDtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mDtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mObsCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addComponent(mMsgRecibo)
                    .addComponent(mMSgBoleta))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel27, jLabel28, jLabel29});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mDtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mMSgBoleta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mMsgRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mDtSaida, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mObsCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel27, jLabel28, jLabel29});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel30, jLabel31, jLabel32});

        jTabbedPane2.addTab("Menssagens", jPanel4);

        jLabel33.setText("Tipo:");

        mCpfCnpj.setEnabled(false);
        mCpfCnpj.setMaximumSize(new java.awt.Dimension(117, 22));
        mCpfCnpj.setMinimumSize(new java.awt.Dimension(117, 22));
        mCpfCnpj.setPreferredSize(new java.awt.Dimension(117, 22));

        mIdentidade.setName("mIdentidade"); // NOI18N

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("R.G.:");

        lbCpfCnpj.setText("CPF:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mFavorecido))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mEmail))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mBanco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addGap(4, 4, 4)
                                .addComponent(mAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mCCorrente, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mProfissao))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mEndereco)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mCidade)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mCep, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbtBuscaCep, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mCplto, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel17))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(mIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(mRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(mConjugue, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(mDtNascRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(7, 7, 7)
                                                .addComponent(jLabel22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(mDtNascConj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mNome)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel10, jLabel12, jLabel14, jLabel17, jLabel19, jLabel21, jLabel24, jLabel25, jLabel3, jLabel6});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {mDtNasc, mDtNascConj});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(mCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbCpfCnpj)
                                .addComponent(mTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel33)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                .addComponent(mEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(mNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(mCplto, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbtBuscaCep, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mCep, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel40)
                                .addComponent(mSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mDtNascRep, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mDtNascConj, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mConjugue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mCCorrente, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mFavorecido, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel10, jLabel12, jLabel14, jLabel17, jLabel19, jLabel21, jLabel24, jLabel25, jLabel3, jLabel6});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {mAgencia, mBairro, mBanco, mCCorrente, mCep, mCidade, mCodigo, mConjugue, mCplto, mDtNasc, mDtNascConj, mDtNascRep, mEmail, mEndereco, mEstCivil, mFavorecido, mIdentidade, mNacionalidade, mNome, mNumero, mProfissao, mRepresentante});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mCodigoFocusLost
        boolean achei = false;
        try {
            achei = MoveToProp("rgprp", mCodigo.getText());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        mCodigo.setEditable(false);
    }//GEN-LAST:event_mCodigoFocusLost

    private void mNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mNomeFocusGained
        mNome.selectAll();
    }//GEN-LAST:event_mNomeFocusGained

    private void mNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mNomeFocusLost
        mNome.select(0, 0);
    }//GEN-LAST:event_mNomeFocusLost

    private void btIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirActionPerformed
        LimpaDados();
        bNew = true;
        btIncluir.setEnabled(false && _Incluir);
        btExcluir.setEnabled(false && _Excluir);
        btGravar.setEnabled(true && _Alterar);
        btTras.setEnabled(false);
        btFrente.setEnabled(false);
        btIrPara.setEnabled(false);
        btImoveis.setEnabled(false && _Imoveis);
        btSair.setEnabled(true);

        mTipoDoc.setEditable(false); mTipoDoc.setEnabled(true);
        mCpfCnpj.setEnabled(true);
        mTipoDoc.setSelectedItem(0);
        mTipoDoc.requestFocus();

    }//GEN-LAST:event_btIncluirActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        String rgprp = mCodigo.getText();
        String selectSQL = "SELECT e.campo, e.tag FROM extrato e WHERE (e.tag != 'X' AND e.tag != 'B') AND e.rgprp = :rgprp " +
                           "union " +
                           "SELECT a.campo, a.tag FROM avisos a WHERE a.rid = 0 and (a.tag != 'X' AND a.tag != 'B') AND a.registro = :registro;";
        ResultSet rs = conn.OpenTable(selectSQL, new Object[][] {
            {"string", "rgprp", rgprp},
            {"string", "registro", rgprp}
        });
        if (conn.RecordCount(rs) > 0) {
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(null,
                    "Este proprietário ainda tem saldo a receber! \nIra apagar todas as informações...\nSem retorno.",
                    "Atenção", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (n == JOptionPane.NO_OPTION) return;
        }
        String[] sql;
        Object[] options = { "Sim", "Não" };
        int n = JOptionPane.showOptionDialog(null,
                "Tem certeza?\nIra apagar todas as informações...\nSem retorno.",
                "Atenção", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (n == JOptionPane.YES_OPTION) {
            sql = new String[] {
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`auxiliar` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`avisos` WHERE registro = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`caixa` WHERE cx_rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`caixabck` WHERE cx_rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`carteira` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`descontos` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`diferenca` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`divisao` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`extrato` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`fiadores` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`imoveis` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`locatarios` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`multa` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`proprietarios` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`recibo` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`retencao` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`seguros` WHERE rgprp = '" + rgprp + "';",
                "DELETE FROM `" + VariaveisGlobais.sqlDbName + "`.`parametros` WHERE variavel = 'PROP" + rgprp + "';"
            };
            
            for (String nsql : sql) {
                try {conn.CommandExecute(nsql);} catch (Exception e) {System.out.println(nsql);e.printStackTrace();}
            }
            try {
                conn.Auditor("EXCLUSAO: PROPRIETARIO", mCodigo.getText());
            } catch (Exception e) {}

            JOptionPane.showMessageDialog(null, "Proprietário excluido!!!");
            try { LerDados(null); } catch (SQLException sqlEx) {}
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        if (mNome.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Campo 'NOME' nào pode ser vazio!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            mNome.requestFocus();
            return;
        }

        if (mCpfCnpj.getText().trim().replace(".", "").replace("-", "").replace("/", "").length() == 0) {
            JOptionPane.showMessageDialog(null, "Campo 'CPF/CNPJ' nào pode ser vazio!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            mCpfCnpj.requestFocus();
            return;
        }

        try {
            GravarDados();
        } catch (SQLException ex) { ex.printStackTrace();}

        bNew = false;

        btIncluir.setEnabled(true && _Incluir);
        btExcluir.setEnabled(true && _Excluir);
        btGravar.setEnabled(true && _Alterar);
        btTras.setEnabled(true);
        btFrente.setEnabled(true);
        btIrPara.setEnabled(true);
        btImoveis.setEnabled(true && _Imoveis);
        btSair.setEnabled(true);
        
        mTipoDoc.setEditable(false); mTipoDoc.setEnabled(false);
        mCpfCnpj.setEnabled(false);
    }//GEN-LAST:event_btGravarActionPerformed

    private void btTrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTrasActionPerformed
        String sInativos = ""; Object[][] param = null;
        sInativos = (!VariaveisGlobais.IProp ? "WHERE rgprp < :rgprp AND Lower(Trim(status)) = 'ativo'" : "WHERE Lower(Trim(status)) <> 'ativo'");
        param = new Object[][] {{"int", "rgprp", Integer.parseInt(mCodigo.getText().trim())}};
        ResultSet pResult = conn.OpenTable("SELECT * FROM proprietarios " + sInativos + "ORDER BY rgprp DESC LIMIT 1;", ResultSet.CONCUR_UPDATABLE, param);
        int _rgprp = -1;
        try {
            while (pResult.next()) {
                _rgprp = pResult.getInt("rgprp");
            }
            conn.CloseTable(pResult);
            if (_rgprp > -1) LerDados(_rgprp);
        } catch (SQLException es) {conn.CloseTable(pResult);}
    }//GEN-LAST:event_btTrasActionPerformed

    private void btFrenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFrenteActionPerformed
        String sInativos = ""; Object[][] param = null;
        sInativos = (!VariaveisGlobais.IProp ? "WHERE rgprp > :rgprp AND Lower(Trim(status)) = 'ativo'" : "WHERE Lower(Trim(status)) <> 'ativo'");
        param = new Object[][] {{"int", "rgprp", Integer.parseInt(mCodigo.getText().trim())}};
        ResultSet pResult = conn.OpenTable("SELECT * FROM proprietarios " + sInativos + "ORDER BY rgprp LIMIT 1;", ResultSet.CONCUR_UPDATABLE, param);
        int _rgprp = -1;
        try {
            while (pResult.next()) {
                _rgprp = pResult.getInt("rgprp");
            }
            conn.CloseTable(pResult);
            if (_rgprp > -1) LerDados(_rgprp);
        } catch (SQLException es) {conn.CloseTable(pResult);}
    }//GEN-LAST:event_btFrenteActionPerformed

    private void btIrParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIrParaActionPerformed
        mCodigo.setEditable(true);
        mCodigo.selectAll();
        mCodigo.requestFocus();
    }//GEN-LAST:event_btIrParaActionPerformed

    private void btImoveisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImoveisActionPerformed
        int selRow = tbvImoveis.getSelectedRow();
        Object valor = null;
        if (selRow > -1) valor = tbvImoveis.getModel().getValueAt(selRow, 0);
        VariaveisGlobais.rgprp = mCodigo.getText();
        VariaveisGlobais.rgimv = (valor != null ? valor.toString() : "");

        Imovel oImv = null;
        oImv = new Imovel(null, closable); 
        oImv.setBotoes(_botoes);
        oImv.setVisible(true);
        FillImoveis(tbvImoveis, Integer.parseInt(mCodigo.getText()));
    }//GEN-LAST:event_btImoveisActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        if (bNew) {
            try {
                LerDados(null);
                btIncluir.setEnabled(true);
                btExcluir.setEnabled(true);
                btGravar.setEnabled(true);
                btTras.setEnabled(true);
                btFrente.setEnabled(true);
                btIrPara.setEnabled(true);
                btImoveis.setEnabled(true);
                btSair.setEnabled(true);
                
                mTipoDoc.setEditable(false); mTipoDoc.setEnabled(false);
                mCpfCnpj.setEnabled(false);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            bNew = false;
        } else this.dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void jbtBuscaCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscaCepActionPerformed
        BuscaCep oCep = new BuscaCep(null, true);
        oCep.setVisible(true);

        Object[] dados;
        dados = oCep.dados;
        oCep = null;

        if (dados != null) {
            mEndereco.setText(dados[0].toString() + " " + dados[1].toString());
            mBairro.setText(dados[2].toString());
            mCidade.setText(dados[3].toString());
            mEstado.setText(dados[4].toString());
            mCep.setText(dados[5].toString());

            mNumero.requestFocus();
        }
    }//GEN-LAST:event_jbtBuscaCepActionPerformed

    private void plusMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plusMouseReleased
        if (!plus.isEnabled()) return;
        
        jTelsCont oTela = new jTelsCont(null, true);
        oTela.setVisible(true);
        String[] aTelCon = oTela.get();
        if (aTelCon != null) {
            mTelefone.addItem(aTelCon[0] + " * " + aTelCon[1]);
        }
        oTela = null;
    }//GEN-LAST:event_plusMouseReleased

    private void minusMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minusMouseReleased
        if (!minus.isEnabled()) return;
        
        if(mTelefone.getSelectedIndex() > -1) mTelefone.removeItemAt(mTelefone.getSelectedIndex());
    }//GEN-LAST:event_minusMouseReleased

    private void mTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTipoDocActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                if (bNew) mCpfCnpj.setText(null);
                if (mTipoDoc.getSelectedIndex() == 0) {
                    lbCpfCnpj.setText("CPF:");
                    new CamposScreen(mCpfCnpj,"CPF");
                } else {
                    lbCpfCnpj.setText("CNPJ:");
                    new CamposScreen(mCpfCnpj,"CNPJ");
                }
                mCpfCnpj.requestFocusInWindow();
            };
        });
    }//GEN-LAST:event_mTipoDocActionPerformed

    private void GravarDados() throws SQLException { 
        int iNewRgPrp = 0;
        if (bNew) {
            int NewRgPrp = 0;
            try {
                NewRgPrp = Integer.parseInt(conn.ReadParameters("PROP"));
            } catch (SQLException ex) {}
            int PropInc = 0;
            try {
                PropInc = Integer.parseInt(conn.ReadParameters("PROPINC"));
            } catch (SQLException ex) {}
            iNewRgPrp = NewRgPrp + PropInc;

            String cPar[] = {"PROP",String.valueOf(iNewRgPrp),"NUMERICO"};
            try {
                conn.SaveParameters(cPar);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else iNewRgPrp = Integer.parseInt(mCodigo.getText());

        String telef = "";
        for (int w=0;w<mTelefone.getItemCount();w++) {
            String tmptel = mTelefone.getModel().getElementAt(w).toString();
            try {
                telef += tmptel.substring(0, tmptel.indexOf("*") - 1) + "," + tmptel.substring(tmptel.indexOf("*") + 1) + ";";
            } catch (Exception e) {telef = tmptel;}
        }
        
        String query = ""; Object[][] param = null;
        if (bNew) {
            query = "INSERT INTO `proprietarios` (`rgprp`, `nome`, `tipoprop`, `end`, `num`, `compl`, `bairro`, `cidade`, `estado`, `cep`, `tel`, " + 
                    "`profissao`, `representante`, `repdtnasc`, `naciona`, `ecivil`, `sexo`, `dtnasc`, `rginsc`, `cpfcnpj`, `conjugue`, " + 
                    "`conjdtnasc`, `banco`, `agencia`, `conta`, `favorecido`, `email`, `dtcadastro`, `status`, `dtsaida`, `msgboleta`, " + 
                    "`msgrecibo`, `obscaixa`, `dtultpagto`, `vrultpagto`, `saldoant`) VALUES (:rgprp, :nome, :tipoprop, :end, :num, :compl, " + 
                    ":bairro, :cidade, :estado, :cep, :tel, :profissao, :representante, :repdtnasc, :naciona, :ecivil, :sexo, :dtnasc, " + 
                    ":rginsc, :cpfcnpj, :conjugue, :conjdtnasc, :banco, :agencia, :conta, :favorecido, :email, :dtcadastro, :status, " + 
                    ":dtsaida, :msgboleta, :msgrecibo, :obscaixa, :dtultpagto, :vrultpagto, :saldoant);";
            param = new Object[][] { 
                {"int", "rgprp", iNewRgPrp},
                {"string", "nome", mNome.getText().trim()},
                {"string", "tipoprop", mTipoDoc.getSelectedItem().toString()},
                {"string", "end", mEndereco.getText().trim()},
                {"string", "num", mNumero.getText().trim()},
                {"string", "compl", mCplto.getText().trim()},
                {"string", "bairro", mBairro.getText().trim()},
                {"string", "cidade", mCidade.getText().trim()},
                {"string", "estado", mEstado.getText().trim()},
                {"string", "cep", mCep.getText().trim()},
                {"string", "tel", !telef.isEmpty() ? telef.substring(0, telef.length() - 1) : null},
                {"string", "profissao", mProfissao.getText().trim()},
                {"string", "representante", mRepresentante.getText().trim()},
                {"date", "repdtnasc", mDtNascRep.getDate()},
                {"string", "naciona", mNacionalidade.getText().trim()},
                {"string", "ecivil", mEstCivil.getSelectedItem().toString().trim()},
                {"string", "sexo", mSexo.getSelectedItem().toString().trim()},
                {"date", "dtnasc", mDtNasc.getDate()},
                {"string", "rginsc", mIdentidade.getText().trim()},
                {"string", "cpfcnpj", mCpfCnpj.getText().trim()},
                {"string", "conjugue", mConjugue.getText().trim()},
                {"date", "conjdtnasc", mDtNascConj.getDate()},
                {"string", "banco", mBanco.getText().trim()},
                {"string", "agencia", mAgencia.getText()},
                {"string", "conta", mCCorrente.getText().trim()},
                {"string", "favorecido", mFavorecido.getText().trim()},
                {"string", "email", mEmail.getText().trim()},
                {"date", "dtcadastro", mDtEntrada.getDate()},
                {"string", "status", mStatus.getSelectedItem().toString().trim()},
                {"date", "dtsaida", mDtSaida.getDate()},
                {"string", "msgboleta", mMSgBoleta.getText().trim()},
                {"string", "msgrecibo", mMsgRecibo.getText().trim()},
                {"string", "obscaixa", mObsCaixa.getText().trim()},
                {"string", "dtultpagto", "0000-00-00"},
                {"float", "vrultpagto", 0F},
                {"float", "saldoant", 0F}
            };
        } else {
            query = "UPDATE `proprietarios` SET `nome` = :nome, `tipoprop` = :tipoprop, `end` = :end, `num` = :num, `compl` = :compl, " + 
                    "`bairro` = :bairro, `cidade` = :cidade, `estado` = :estado, `cep` = :cep, `tel` = :tel, `profissao` = :profissao, " + 
                    "`representante` = :representante, `repdtnasc` = :repdtnasc, `naciona` = :naciona, `ecivil` = :ecivil, `sexo` = :sexo, " + 
                    "`dtnasc` = :dtnasc, `rginsc` = :rginsc, `cpfcnpj` = :cpfcnpj, `conjugue` = :conjugue, `conjdtnasc` = :conjdtnasc, " +
                    "`banco` = :banco, `agencia` = :agencia, `conta` = :conta, `favorecido` = :favorecido, `email` = :email, " + 
                    "`dtcadastro` = :dtcadastro, `status` = :status, `dtsaida` = :dtsaida, `msgboleta` = :msgboleta, `msgrecibo` = :msgrecibo, " +
                    "`obscaixa` = :obscaixa WHERE `rgprp` = :rgprp;";
            param = new Object[][] {
                {"int", "rgprp", iNewRgPrp},
                {"string", "nome", mNome.getText().trim()},
                {"string", "tipoprop", mTipoDoc.getSelectedItem().toString()},
                {"string", "end", mEndereco.getText().trim()},
                {"string", "num", mNumero.getText().trim()},
                {"string", "compl", mCplto.getText().trim()},
                {"string", "bairro", mBairro.getText().trim()},
                {"string", "cidade", mCidade.getText().trim()},
                {"string", "estado", mEstado.getText().trim()},
                {"string", "cep", mCep.getText().trim()},
                {"string", "tel", !telef.isEmpty() ? telef.substring(0, telef.length() - 1) : null},
                {"string", "profissao", mProfissao.getText().trim()},
                {"string", "representante", mRepresentante.getText().trim()},
                {"date", "repdtnasc", mDtNascRep.getDate()},
                {"string", "naciona", mNacionalidade.getText().trim()},
                {"string", "ecivil", mEstCivil.getSelectedItem().toString().trim()},
                {"string", "sexo", mSexo.getSelectedItem().toString().trim()},
                {"date", "dtnasc", mDtNasc.getDate()},
                {"string", "rginsc", mIdentidade.getText().trim()},
                {"string", "cpfcnpj", mCpfCnpj.getText().trim()},
                {"string", "conjugue", mConjugue.getText().trim()},
                {"date", "conjdtnasc", mDtNascConj.getDate()},
                {"string", "banco", mBanco.getText().trim()},
                {"string", "agencia", mAgencia.getText()},
                {"string", "conta", mCCorrente.getText().trim()},
                {"string", "favorecido", mFavorecido.getText().trim()},
                {"string", "email", mEmail.getText().trim()},
                {"date", "dtcadastro", mDtEntrada.getDate()},
                {"string", "status", mStatus.getSelectedItem().toString().trim()},
                {"date", "dtsaida", mDtSaida.getDate()},
                {"string", "msgboleta", mMSgBoleta.getText().trim()},
                {"string", "msgrecibo", mMsgRecibo.getText().trim()},
                {"string", "obscaixa", mObsCaixa.getText().trim()}
            };
        }

        conn.CommandExecute(query, param);
        
        if (bNew) mCodigo.setText(Integer.toString(iNewRgPrp));
    }

    public boolean MoveToProp(String campo, String seek) throws SQLException {
        boolean achei = false;
        String sInativos = ""; Object[][] param = null;
        sInativos = (!VariaveisGlobais.IProp ? "WHERE `" + campo + "` = :rgprp AND Lower(Trim(status)) = 'ativo'" : "WHERE Lower(Trim(status)) <> 'ativo'");
        param = new Object[][] {{"int", "rgprp", Integer.parseInt(seek)}};
        ResultSet pResult = conn.OpenTable("SELECT * FROM proprietarios " + sInativos + "ORDER BY rgprp LIMIT 1;", ResultSet.CONCUR_UPDATABLE, param);

        int _rgprp =  -1;
        try {
            while (pResult.next()) {
                _rgprp = pResult.getInt("rgprp");
                achei = true;
            }
        } catch (SQLException sqlEx) {}
        conn.CloseTable(pResult);
        if (!achei) LimpaDados();
        try { LerDados(_rgprp); } catch (Exception ex) {}
        return achei;
    }

    private void LimpaDados() {
        mCodigo.setText("");
        mNome.setText("");
        mTipoDoc.setSelectedIndex(0);
        mEndereco.setText("");
        mNumero.setText("");
        mCplto.setText("");
        mBairro.setText("");
        mCidade.setText("");
        mEstado.setText("");
        mCep.setText("");
        
        mTelefone.removeAllItems();
        mTelefone.setSelectedItem("");
        
        mProfissao.setText("");
        mRepresentante.setText("");
        mDtNascRep.setDate(null);
        mNacionalidade.setText("");
        mEstCivil.setSelectedIndex(0);
        mSexo.setSelectedIndex(0);
        mDtNasc.setDate(null);
        mIdentidade.setText("");
        mCpfCnpj.setText("");
        mConjugue.setText("");
        mDtNascConj.setDate(null);
        mBanco.setText("");
        mAgencia.setText("");
        mCCorrente.setText("");
        mFavorecido.setText("");
        mEmail.setText("");
        mDtEntrada.setDate(null);
        mStatus.setSelectedIndex(0);
        mDtSaida.setDate(null);

        mMSgBoleta.setText("");
        mMsgRecibo.setText("");
        mObsCaixa.setText("");

        // Limpa a lista de imoveis
        TableControl.header(tbvImoveis, new String[][] {{"rgimv","tipoimovel","endereço","situação"},{"50","120","500","100"}});
    }

    private void LerDados(Object rgprp) throws SQLException {
        if (VariaveisGlobais.isNuvem) while (!isDbConnected()) {}
        
        String sInativos = ""; Object[][] param = null;
        if (rgprp == null) {
            sInativos = (!VariaveisGlobais.IProp ? "WHERE Lower(Trim(status)) = 'ativo'" : "WHERE Lower(Trim(status)) <> 'ativo'");
        } else {
            sInativos = (!VariaveisGlobais.IProp ? "WHERE rgprp = :rgprp AND Lower(Trim(status)) = 'ativo'" : "WHERE Lower(Trim(status)) <> 'ativo'");
            param = new Object[][] {{"int", "rgprp", (int)rgprp}};
        }
        ResultSet pResult = conn.OpenTable("SELECT * FROM proprietarios " + sInativos + "ORDER BY rgprp LIMIT 1;", ResultSet.CONCUR_UPDATABLE, param);

        if (conn.RecordCount(pResult) <= 0) {
            conn.CloseTable(pResult);
            return;
        }

        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

        try {
            while (pResult.next()) {
                mCodigo.setText(String.valueOf(pResult.getInt("rgprp")));
                mNome.setText(pResult.getString("nome"));
                mTipoDoc.setSelectedItem(pResult.getString("tipoprop"));
                mEndereco.setText(pResult.getString("end"));
                mNumero.setText(pResult.getString("num"));
                mCplto.setText(pResult.getString("compl"));
                mBairro.setText(pResult.getString("bairro"));
                mCidade.setText(pResult.getString("cidade"));
                mEstado.setText(pResult.getString("estado"));
                mCep.setText(pResult.getString("cep"));

                mTelefone.removeAllItems();
                String[] telef = null;
                try { 
                    String _telef = pResult.getString("tel");
                    if (_telef != null) {
                        telef = _telef.split(";");
                        for (String telef1 : telef) {
                            if (!telef1.trim().equalsIgnoreCase("")) {
                                String[] tmptel = telef1.split(",");
                                String teltmp = tmptel[0];
                                if (tmptel.length > 1) teltmp += " * " + tmptel[1];
                                mTelefone.addItem(teltmp);
                            }
                        }
                    }
                } catch (SQLException e) {}

                mProfissao.setText(pResult.getString("profissao"));
                mRepresentante.setText(pResult.getString("representante"));

                Date DataFormat = null;
                try
                {
                    DataFormat = pResult.getDate("repdtnasc");
                } catch (SQLException ex) {}
                mDtNascRep.setDate(DataFormat);     //.setText(DataFormat);

                mNacionalidade.setText(pResult.getString("naciona"));

                String pCivil = pResult.getString("ecivil").trim().toLowerCase();
                String sCivil[] = {"solteiro","solteira","casado","casada","separado","separada","divorciado","divorciada","viuvo","viuva"};
                Integer nPos = FuncoesGlobais.IndexOf2(sCivil,pCivil) ;
                if (nPos == -1) {
                    nPos = 0;
                }
                else if (nPos == 0 || nPos == 1){
                    nPos = 0;
                }
                else if (nPos == 2 || nPos == 3) {
                    nPos = 1;
                }
                else if (nPos == 4 || nPos == 5) {
                    nPos = 2;
                }
                else if (nPos == 6 || nPos == 7) {
                    nPos = 3;
                }
                else if (nPos == 8 || nPos == 9 ) {
                    nPos = 4;
                }
                else
                    nPos = 0;

                mEstCivil.setSelectedIndex(nPos);

                mSexo.getModel().setSelectedItem(pResult.getString("sexo"));

                Date DataFormat2 = null;
                try {
                    DataFormat2 = pResult.getDate("dtnasc");
                } catch (SQLException ex ){}
                mDtNasc.setDate(DataFormat2);

                mIdentidade.setText(pResult.getString("rginsc"));

                if (pResult.getString("tipoprop").contains("F")) {
                    String _cpf = pResult.getString("cpfcnpj");
                    mCpfCnpj.setText(_cpf);
                } else {
                    String _cnpj = pResult.getString("cpfcnpj");
                    mCpfCnpj.setText(_cnpj);
                }

                mConjugue.setText(pResult.getString("conjugue"));

                Date DataFormat3 = null;
                try {
                    DataFormat3 = pResult.getDate("conjdtnasc");
                } catch (SQLException ex) {}
                mDtNascConj.setDate(DataFormat3);

                mBanco.setText(pResult.getString("banco"));
                mAgencia.setText(pResult.getString("agencia"));
                mCCorrente.setText(pResult.getString("conta"));
                mFavorecido.setText(pResult.getString("favorecido"));
                mEmail.setText(pResult.getString("email"));

                Date DataFormat4 = null;
                try {
                        DataFormat4 = pResult.getDate("dtcadastro");
                } catch (SQLException ex) {}
                mDtEntrada.setDate(DataFormat4);

                String pTipo = pResult.getString("status").trim().toLowerCase();
                String aTipo[] = {"ativo","inativo"};
                nPos = FuncoesGlobais.IndexOf(aTipo, pTipo);
                mStatus.setSelectedIndex(nPos);

                Date DataFormat5 = null;
                try {
                    DataFormat5 = pResult.getDate("dtsaida");
                } catch (SQLException ex) {}
                mDtSaida.setDate(DataFormat5);

                mMSgBoleta.setText(pResult.getString("msgboleta"));
                mMsgRecibo.setText(pResult.getString("msgrecibo"));
                mObsCaixa.setText(pResult.getString("obscaixa"));
            }
        } catch (SQLException ex) {}
        
        // Fecha tabela
        conn.CloseTable(pResult);
        
        FillImoveis(tbvImoveis, Integer.parseInt(mCodigo.getText().trim()));
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                mNome.requestFocus();
            }
        });
    }

    private void FillImoveis(JTable table, int rgprp) {
        // Seta Cabecario
        TableControl.header(table, new String[][] {{"rgimv","tipoimovel","endereço","situação"},{"50","120","500","100"}});

        String sSql = "SELECT * FROM imoveis WHERE rgprp = :rgprp AND situacao != 'DESATIVADO' ORDER BY rgprp, rgimv;";
        ResultSet imResult = this.conn.OpenTable(sSql, new Object[][] {{"int", "rgprp", rgprp}});

        try {
            while (imResult.next()) {
                String trgimv = String.valueOf(imResult.getInt("rgimv"));
                String ttpimovel = imResult.getString("tpimovel").toUpperCase();
                String tend = imResult.getString("end").trim() + ", " + imResult.getString("num").trim() + " " + imResult.getString("compl").trim() ;
                String tsituacao = imResult.getString("situacao").toUpperCase();

                TableControl.add(table, new String[][]{{trgimv, ttpimovel, tend, tsituacao},{"C","C","L","C"}}, true);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        conn.CloseTable(imResult);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btFrente;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btImoveis;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btIrPara;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btTras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton jbtBuscaCep;
    private javax.swing.JLabel lbCpfCnpj;
    private javax.swing.JTextField mAgencia;
    private javax.swing.JTextField mBairro;
    private javax.swing.JTextField mBanco;
    private javax.swing.JTextField mCCorrente;
    private javax.swing.JFormattedTextField mCep;
    private javax.swing.JTextField mCidade;
    private javax.swing.JFormattedTextField mCodigo;
    private javax.swing.JTextField mConjugue;
    private javax.swing.JTextField mCpfCnpj;
    private javax.swing.JTextField mCplto;
    private com.toedter.calendar.JDateChooser mDtEntrada;
    private com.toedter.calendar.JDateChooser mDtNasc;
    private com.toedter.calendar.JDateChooser mDtNascConj;
    private com.toedter.calendar.JDateChooser mDtNascRep;
    private com.toedter.calendar.JDateChooser mDtSaida;
    private javax.swing.JTextField mEmail;
    private javax.swing.JTextField mEndereco;
    private javax.swing.JComboBox mEstCivil;
    private javax.swing.JTextField mEstado;
    private javax.swing.JTextField mFavorecido;
    private javax.swing.JTextField mIdentidade;
    private javax.swing.JTextField mMSgBoleta;
    private javax.swing.JTextField mMsgRecibo;
    private javax.swing.JTextField mNacionalidade;
    private javax.swing.JTextField mNome;
    private javax.swing.JTextField mNumero;
    private javax.swing.JTextField mObsCaixa;
    private javax.swing.JTextField mProfissao;
    private javax.swing.JTextField mRepresentante;
    private javax.swing.JComboBox mSexo;
    private javax.swing.JComboBox mStatus;
    private javax.swing.JComboBox mTelefone;
    private javax.swing.JComboBox<String> mTipoDoc;
    private javax.swing.JLabel minus;
    private javax.swing.JLabel plus;
    private javax.swing.JTable tbvImoveis;
    // End of variables declaration//GEN-END:variables
}
